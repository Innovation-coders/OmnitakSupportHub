@model OmnitakSupportHub.Models.ViewModels.CreateTicketViewModel
@{
    ViewData["Title"] = "Submit Ticket";
    Layout = null; // Using custom layout to match Manager Dashboard
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Omnitak Support Hub</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --primary-deep-blue: #0F1419;
            --primary-navy: #1A237E;
            --accent-electric: #00E5FF;
            --accent-purple: #7B2CBF;
            --accent-gold: #FFB300;
            --accent-success: #4CAF50;
            --accent-warning: #FF9800;
            --accent-danger: #F44336;
            --surface-dark: #121212;
            --surface-elevated: #1E1E1E;
            --surface-card: #242424;
            --surface-glass: rgba(255, 255, 255, 0.05);
            --text-primary: #FFFFFF;
            --text-secondary: rgba(255, 255, 255, 0.7);
            --text-muted: rgba(255, 255, 255, 0.5);
            --gradient-primary: linear-gradient(135deg, #0F1419 0%, #1A237E 50%, #7B2CBF 100%);
            --gradient-accent: linear-gradient(45deg, #00E5FF, #7B2CBF);
            --gradient-card: linear-gradient(135deg, #1E1E1E 0%, #242424 100%);
            --shadow-glow: 0 0 40px rgba(0, 229, 255, 0.3);
            --shadow-deep: 0 25px 50px -12px rgba(0, 0, 0, 0.8);
            --shadow-card: 0 8px 32px rgba(0, 0, 0, 0.3);
            --border-glow: rgba(0, 229, 255, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--primary-deep-blue);
            color: var(--text-primary);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Animated Background - Matching Manager Dashboard */
        .background-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--gradient-primary);
            z-index: -2;
        }

            .background-container::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: radial-gradient(circle at 20% 80%, rgba(0, 229, 255, 0.3) 0%, transparent 50%), radial-gradient(circle at 80% 20%, rgba(123, 44, 191, 0.3) 0%, transparent 50%), radial-gradient(circle at 40% 40%, rgba(255, 179, 0, 0.2) 0%, transparent 50%);
                animation: backgroundFlow 20s ease-in-out infinite;
            }

        .floating-orbs {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        .orb {
            position: absolute;
            border-radius: 50%;
            background: var(--gradient-accent);
            opacity: 0.1;
            animation: floatOrb 20s infinite ease-in-out;
        }

            .orb:nth-child(1) {
                width: 200px;
                height: 200px;
                top: 20%;
                left: 10%;
                animation-delay: 0s;
            }

            .orb:nth-child(2) {
                width: 150px;
                height: 150px;
                top: 60%;
                right: 20%;
                animation-delay: 7s;
            }

            .orb:nth-child(3) {
                width: 100px;
                height: 100px;
                bottom: 20%;
                left: 70%;
                animation-delay: 14s;
            }

        @@keyframes backgroundFlow {
            0%, 100% {
                opacity: 1;
                transform: scale(1) rotate(0deg);
            }

            50% {
                opacity: 0.8;
                transform: scale(1.05) rotate(2deg);
            }
        }

        @@keyframes floatOrb {
            0%, 100% {
                transform: translate(0, 0) scale(1);
            }

            33% {
                transform: translate(30px, -30px) scale(1.1);
            }

            66% {
                transform: translate(-20px, 20px) scale(0.9);
            }
        }

        /* Main Container */
        .ticket-form-wrapper {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
            position: relative;
            z-index: 1;
        }

        .create-container {
            max-width: 900px;
            width: 100%;
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 24px;
            box-shadow: var(--shadow-deep);
            backdrop-filter: blur(20px);
            overflow: hidden;
            animation: slideInUp 1s ease;
        }

        /* Header Section */
        .form-header {
            background: var(--gradient-accent);
            padding: 3rem 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

            .form-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grid" width="10" height="10" patternUnits="userSpaceOnUse"><path d="M 10 0 L 0 0 0 10" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23grid)" /></svg>');
                opacity: 0.3;
            }

        .create-title {
            font-size: 2.5rem;
            font-weight: 800;
            color: white;
            margin: 0;
            position: relative;
            z-index: 1;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .form-subtitle {
            font-size: 1.2rem;
            margin-top: 1rem;
            color: rgba(255, 255, 255, 0.9);
            position: relative;
            z-index: 1;
            font-weight: 400;
        }

        /* Form Content */
        .form-content {
            padding: 3rem;
        }

        .form-group {
            margin-bottom: 2.5rem;
            position: relative;
            animation: fadeInUp 0.8s ease;
            animation-delay: calc(var(--delay) * 0.1s);
            animation-fill-mode: both;
        }

            .form-group label {
                display: flex;
                align-items: center;
                font-weight: 600;
                color: var(--text-primary);
                margin-bottom: 1rem;
                font-size: 1.1rem;
                text-transform: uppercase;
                letter-spacing: 0.5px;
            }

                .form-group label::after {
                    content: '*';
                    color: var(--accent-danger);
                    margin-left: 8px;
                    font-size: 1.2rem;
                }

        .form-icon {
            width: 20px;
            height: 20px;
            margin-right: 12px;
            opacity: 0.8;
        }

        .form-control {
            width: 100%;
            padding: 1.25rem 1.5rem;
            background: var(--surface-elevated);
            border: 2px solid rgba(255, 255, 255, 0.1);
            border-radius: 12px;
            color: var(--text-primary);
            font-size: 1rem;
            font-family: inherit;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

            .form-control::placeholder {
                color: var(--text-muted);
                opacity: 1;
            }

            .form-control:focus {
                outline: none;
                border-color: var(--accent-electric);
                background: var(--surface-card);
                box-shadow: 0 0 0 3px rgba(0, 229, 255, 0.1);
                transform: translateY(-2px);
            }

            .form-control:hover {
                border-color: rgba(255, 255, 255, 0.3);
                background: var(--surface-card);
            }

        textarea.form-control {
            resize: vertical;
            min-height: 140px;
            font-family: inherit;
        }

        select.form-control {
            background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="%23FFFFFF"><path d="M7 10l5 5 5-5z"/></svg>');
            background-repeat: no-repeat;
            background-position: right 16px center;
            background-size: 20px;
            padding-right: 50px;
            appearance: none;
            cursor: pointer;
        }

        /* Validation Messages */
        .text-danger {
            color: var(--accent-danger);
            font-size: 0.9rem;
            margin-top: 0.75rem;
            display: flex;
            align-items: center;
            font-weight: 500;
        }

            .text-danger::before {
                content: '⚠️';
                margin-right: 8px;
            }

        /* Alert Styling */
        .alert-danger {
            background: linear-gradient(135deg, rgba(244, 67, 54, 0.1) 0%, rgba(244, 67, 54, 0.05) 100%);
            border: 1px solid rgba(244, 67, 54, 0.3);
            border-left: 4px solid var(--accent-danger);
            padding: 2rem;
            margin-bottom: 2.5rem;
            border-radius: 16px;
            backdrop-filter: blur(10px);
            animation: slideInDown 0.5s ease;
        }

            .alert-danger strong {
                color: var(--accent-danger);
                font-weight: 700;
                font-size: 1.1rem;
                display: flex;
                align-items: center;
                margin-bottom: 1rem;
            }

            .alert-danger ul {
                margin: 0;
                padding-left: 1.5rem;
                list-style: none;
            }

            .alert-danger li {
                margin-bottom: 0.5rem;
                color: var(--text-secondary);
                position: relative;
                padding-left: 1.5rem;
            }

                .alert-danger li::before {
                    content: '•';
                    color: var(--accent-danger);
                    position: absolute;
                    left: 0;
                    font-weight: bold;
                }

        /* Submit Button */
        .button-group {
            text-align: center;
            margin-top: 3rem;
            padding-top: 2rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .ticket-button {
            background: var(--gradient-accent);
            color: white;
            border: none;
            padding: 1.25rem 3rem;
            border-radius: 50px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: var(--shadow-glow);
            position: relative;
            overflow: hidden;
            display: inline-flex;
            align-items: center;
            gap: 12px;
            min-width: 200px;
            justify-content: center;
        }

            .ticket-button::before {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
                transition: left 0.5s;
            }

            .ticket-button:hover {
                transform: translateY(-3px);
                box-shadow: 0 0 50px rgba(0, 229, 255, 0.5), 0 12px 30px rgba(0, 0, 0, 0.3);
            }

                .ticket-button:hover::before {
                    left: 100%;
                }

            .ticket-button:active {
                transform: translateY(-1px);
            }

            .ticket-button:disabled {
                background: linear-gradient(135deg, #666 0%, #444 100%);
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
                opacity: 0.6;
            }

            .ticket-button:focus {
                outline: 3px solid rgba(0, 229, 255, 0.5);
                outline-offset: 3px;
            }

        /* Loading State */
        .loading .ticket-button {
            pointer-events: none;
        }

        .loading .form-control {
            opacity: 0.7;
            pointer-events: none;
        }

        /* Back Button */
        .back-button {
            position: fixed;
            top: 2rem;
            left: 2rem;
            background: var(--surface-elevated);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: var(--text-primary);
            padding: 12px 20px;
            border-radius: 50px;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            z-index: 100;
        }

            .back-button:hover {
                background: var(--surface-card);
                border-color: var(--accent-electric);
                color: var(--text-primary);
                transform: translateY(-2px);
                text-decoration: none;
            }

        /* Animations */
        @@keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes slideInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .ticket-form-wrapper {
                padding: 1rem;
            }

            .create-container {
                border-radius: 20px;
                margin: 0;
            }

            .form-header {
                padding: 2.5rem 1.5rem;
            }

            .create-title {
                font-size: 2rem;
            }

            .form-content {
                padding: 2rem 1.5rem;
            }

            .form-control {
                padding: 1rem 1.25rem;
            }

            .ticket-button {
                padding: 1rem 2rem;
                font-size: 1rem;
                min-width: 180px;
            }

            .back-button {
                top: 1rem;
                left: 1rem;
                padding: 10px 16px;
            }
        }

        @@media (max-width: 480px) {
            .create-title {
                font-size: 1.6rem;
            }

            .form-subtitle {
                font-size: 1rem;
            }

            .button-group {
                margin-top: 2rem;
            }
        }

        /* Enhanced Focus States for Accessibility */
        .form-control:focus,
        .ticket-button:focus,
        .back-button:focus {
            outline: 3px solid rgba(0, 229, 255, 0.5);
            outline-offset: 2px;
        }

        /* Smooth scrolling */
        html {
            scroll-behavior: smooth;
        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="background-container">
        <div class="floating-orbs">
            <div class="orb"></div>
            <div class="orb"></div>
            <div class="orb"></div>
        </div>
    </div>

    <!-- Back Button -->
    <a href="javascript:history.back()" class="back-button">
        <i class="bi bi-arrow-left"></i>
        Back
    </a>

    <div class="ticket-form-wrapper">
        <div class="create-container">
            <div class="form-header">
                <h1 class="create-title">
                    <i class="bi bi-ticket-detailed" style="margin-right: 16px;"></i>
                    Submit Support Ticket
                </h1>
                <p class="form-subtitle">We're here to help! Please provide details about your issue and we'll get back to you promptly.</p>
            </div>

            <div class="form-content">
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <strong>
                            <i class="bi bi-exclamation-triangle" style="margin-right: 8px;"></i>
                            Please correct the following issues:
                        </strong>
                        <ul>
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <form asp-action="Create" method="post" novalidate id="ticketForm">
                    <div class="form-group" style="--delay: 1">
                        <label asp-for="Title">
                            <svg class="form-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M3 17.25V21H6.75L17.81 9.94L14.06 6.19L3 17.25ZM20.71 7.04C21.1 6.65 21.1 6.02 20.71 5.63L18.37 3.29C17.98 2.9 17.35 2.9 16.96 3.29L15.13 5.12L18.88 8.87L20.71 7.04Z" />
                            </svg>
                            Ticket Title
                        </label>
                        <input asp-for="Title" class="form-control" placeholder="Brief description of your issue (e.g., 'Unable to access dashboard')" />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group" style="--delay: 2">
                        <label asp-for="Description">
                            <svg class="form-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M14 17H4V19H14V17ZM20 9H4V11H20V9ZM4 15H18V13H4V15ZM4 5V7H20V5H4Z" />
                            </svg>
                            Description
                        </label>
                        <textarea asp-for="Description" class="form-control" rows="6"
                                  placeholder="Please provide detailed information about your issue:&#10;&#10;• What were you trying to do?&#10;• What went wrong?&#10;• What error messages did you see?&#10;• When did this start happening?&#10;• Steps to reproduce the issue..."></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <div class="form-group" style="--delay: 3">
                        <label asp-for="CategoryId">
                            <svg class="form-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M10 4H4C2.89 4 2 4.89 2 6V18C2 19.11 2.89 20 4 20H20C21.11 20 22 19.11 22 18V8C22 6.89 21.11 6 20 6H12L10 4Z" />
                            </svg>
                            Category
                        </label>
                        <select asp-for="CategoryId" asp-items="Model.Categories" class="form-control">
                            <option value="">-- Select a category that best describes your issue --</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="ticket-button" id="submitBtn">
                            <svg class="form-icon" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M2 21L23 12L2 3V10L17 12L2 14V21Z" />
                            </svg>
                            Submit Ticket
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    @section Scripts {
        <partial name="_ValidationScriptsPartial" />
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('ticketForm');
            const submitButton = document.getElementById('submitBtn');
            const textarea = document.querySelector('textarea[asp-for="Description"]');

            // Enhanced form submission with loading state
            form.addEventListener('submit', function(e) {
                document.body.classList.add('loading');
                submitButton.disabled = true;
                submitButton.innerHTML = `
                    <i class="bi bi-hourglass-split" style="animation: spin 1s linear infinite;"></i>
                    Processing...
                `;

                // Add a slight delay to show the loading state
                setTimeout(() => {
                    // Form will submit naturally after this
                }, 500);
            });

            // Auto-resize textarea with smooth animation
            if (textarea) {
                textarea.addEventListener('input', function() {
                    this.style.height = 'auto';
                    this.style.height = Math.max(140, this.scrollHeight) + 'px';
                });

                // Initial resize
                textarea.style.height = Math.max(140, textarea.scrollHeight) + 'px';
            }

            // Enhanced form field animations
            const formControls = document.querySelectorAll('.form-control');
            formControls.forEach(control => {
                // Add focus animations
                control.addEventListener('focus', function() {
                    this.parentElement.style.transform = 'scale(1.02)';
                    this.parentElement.style.transition = 'transform 0.2s ease';
                });

                control.addEventListener('blur', function() {
                    this.parentElement.style.transform = 'scale(1)';
                });

                // Add typing animation for better UX
                control.addEventListener('input', function() {
                    if (this.value) {
                        this.style.borderColor = 'var(--accent-success)';
                    } else {
                        this.style.borderColor = 'rgba(255, 255, 255, 0.1)';
                    }
                });
            });

            // Add smooth scroll to error messages
            const errorMessages = document.querySelectorAll('.text-danger');
            if (errorMessages.length > 0) {
                errorMessages[0].scrollIntoView({
                    behavior: 'smooth',
                    block: 'center'
                });
            }

            // Add keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                // Ctrl/Cmd + Enter to submit
                if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                    e.preventDefault();
                    form.requestSubmit();
                }

                // Escape to go back
                if (e.key === 'Escape') {
                    history.back();
                }
            });

            // Add form validation feedback
            const requiredFields = document.querySelectorAll('[required]');
            requiredFields.forEach(field => {
                field.addEventListener('blur', function() {
                    if (!this.value.trim()) {
                        this.style.borderColor = 'var(--accent-danger)';
                        this.style.boxShadow = '0 0 0 3px rgba(244, 67, 54, 0.1)';
                    } else {
                        this.style.borderColor = 'var(--accent-success)';
                        this.style.boxShadow = '0 0 0 3px rgba(76, 175, 80, 0.1)';
                    }
                });
            });

            // Add progress indication
            let filledFields = 0;
            const totalFields = 3; // Title, Description, Category

            function updateProgress() {
                const title = document.querySelector('[asp-for="Title"]').value.trim();
                const description = document.querySelector('[asp-for="Description"]').value.trim();
                const category = document.querySelector('[asp-for="CategoryId"]').value;

                filledFields = (title ? 1 : 0) + (description ? 1 : 0) + (category ? 1 : 0);

                // Update submit button based on progress
                if (filledFields === totalFields) {
                    submitButton.style.background = 'var(--gradient-accent)';
                    submitButton.style.boxShadow = 'var(--shadow-glow)';
                } else {
                    submitButton.style.background = 'linear-gradient(135deg, #555 0%, #333 100%)';
                    submitButton.style.boxShadow = 'none';
                }
            }

            // Add progress tracking
            formControls.forEach(control => {
                control.addEventListener('input', updateProgress);
                control.addEventListener('change', updateProgress);
            });

            // Initial progress check
            updateProgress();
        });

        // Add CSS for spinning animation
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes spin {
                from { transform: rotate(0deg); }
                to { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>