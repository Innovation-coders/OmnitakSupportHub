@model OmnitakSupportHub.Models.ViewModels.ManagerDashboardViewModel
@{
    ViewData["Title"] = "Manager Dashboard";
}

<style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        min-height: 100vh;
        background: linear-gradient(135deg, #f0f2f5 0%, #e0e4e8 100%);
    }

    .dashboard-container {
        display: flex;
        width: 100%;
        max-width: 1600px;
        margin: 0 auto;
        min-height: 100vh;
    }

    .sidebar {
        width: 280px;
        background: linear-gradient(135deg, #2e7d32 0%, #388e3c 100%);
        color: white;
        padding: 25px;
        box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        position: sticky;
        top: 0;
        height: 100vh;
        overflow-y: auto;
    }

        .sidebar h3 {
            font-size: 1.6rem;
            margin-bottom: 30px;
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 1px;
            border-bottom: 2px solid rgba(255,255,255,0.2);
            padding-bottom: 15px;
        }

        .sidebar .nav-link {
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
            padding: 15px 20px;
            margin-bottom: 8px;
            border-radius: 8px;
            transition: all 0.3s ease;
            font-weight: 500;
            font-size: 1rem;
        }

            .sidebar .nav-link:hover {
                background: rgba(255, 255, 255, 0.15);
                transform: translateX(5px);
                color: white;
            }

            .sidebar .nav-link.active {
                background: rgba(255, 255, 255, 0.2);
                font-weight: 600;
            }

            .sidebar .nav-link i {
                margin-right: 10px;
                font-size: 1.1rem;
            }

        .sidebar .logout-btn {
            width: 100%;
            padding: 15px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 600;
            margin-top: 30px;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .sidebar .logout-btn:hover {
                background: rgba(255, 255, 255, 0.2);
                border-color: rgba(255, 255, 255, 0.5);
                transform: translateY(-2px);
            }

    .main-content {
        flex: 1;
        padding: 30px;
        background: #ffffff;
        overflow-y: auto;
    }

    .header {
        background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
        padding: 25px 30px;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        margin-bottom: 30px;
        border-left: 5px solid #2e7d32;
    }

        .header h1 {
            color: #2e7d32;
            font-size: 2.5rem;
            font-weight: 700;
            margin: 0 0 5px 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .header p {
            color: #666;
            font-size: 1.2rem;
            margin: 0;
            font-weight: 500;
        }

    .stats-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .stat-card {
        background: linear-gradient(135deg, #fff 0%, #f8f9fa 100%);
        padding: 25px;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        border-left: 5px solid;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .stat-card.primary {
            border-left-color: #2e7d32;
        }

        .stat-card.info {
            border-left-color: #1976d2;
        }

        .stat-card.warning {
            border-left-color: #f57c00;
        }

        .stat-card.success {
            border-left-color: #388e3c;
        }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 5px;
        color: #2e7d32;
    }

    .stat-label {
        color: #666;
        font-size: 1rem;
        font-weight: 500;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .action-buttons {
        display: flex;
        gap: 15px;
        margin-bottom: 30px;
        flex-wrap: wrap;
    }

    .btn {
        padding: 12px 25px;
        text-decoration: none;
        border-radius: 8px;
        font-weight: 600;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
        font-size: 1rem;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .btn-primary {
        background: linear-gradient(135deg, #2e7d32 0%, #388e3c 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(46, 125, 50, 0.3);
    }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1b5e20 0%, #2e7d32 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(46, 125, 50, 0.4);
            color: white;
        }

    .btn-secondary {
        background: linear-gradient(135deg, #1976d2 0%, #1565c0 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(25, 118, 210, 0.3);
    }

        .btn-secondary:hover {
            background: linear-gradient(135deg, #1565c0 0%, #0d47a1 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(25, 118, 210, 0.4);
            color: white;
        }

    .btn-success {
        background: linear-gradient(135deg, #388e3c 0%, #4caf50 100%);
        color: white;
        box-shadow: 0 4px 15px rgba(56, 142, 60, 0.3);
    }

        .btn-success:hover {
            background: linear-gradient(135deg, #2e7d32 0%, #388e3c 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(56, 142, 60, 0.4);
            color: white;
        }

    .section-card {
        background: #fff;
        border-radius: 15px;
        box-shadow: 0 4px 15px rgba(0,0,0,0.08);
        margin-bottom: 30px;
        overflow: hidden;
    }

    .section-header {
        background: linear-gradient(135deg, #2e7d32 0%, #388e3c 100%);
        color: white;
        padding: 20px 25px;
        font-size: 1.4rem;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 1px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .section-content {
        padding: 0;
    }

    .category-section {
        border-bottom: 1px solid #e0e0e0;
    }

        .category-section:last-child {
            border-bottom: none;
        }

    .category-header {
        background: #f8f9fa;
        padding: 20px 25px;
        font-size: 1.3rem;
        font-weight: 600;
        color: #2e7d32;
        border-bottom: 1px solid #e0e0e0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .ticket-count-badge {
        background: #2e7d32;
        color: white;
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
    }

    .table-container {
        overflow-x: auto;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 15px 25px;
        text-align: left;
        border-bottom: 1px solid #e0e0e0;
    }

    th {
        background: #f8f9fa;
        color: #2e7d32;
        font-weight: 600;
        font-size: 0.95rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    td {
        vertical-align: middle;
        font-size: 0.95rem;
    }

    .status-badge, .priority-badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-open {
        background: #fff3e0;
        color: #e65100;
    }

    .status-assigned {
        background: #e8f5e9;
        color: #2e7d32;
    }

    .status-closed {
        background: #ffebee;
        color: #c62828;
    }

    .priority-high {
        background: #ffebee;
        color: #c62828;
    }

    .priority-medium {
        background: #fff3e0;
        color: #ef6c00;
    }

    .priority-low {
        background: #e8f5e9;
        color: #2e7d32;
    }

    .action-btn {
        padding: 8px 15px;
        text-decoration: none;
        border-radius: 6px;
        font-size: 0.9rem;
        font-weight: 500;
        transition: all 0.3s ease;
        margin-right: 5px;
        display: inline-block;
    }

        .action-btn.view {
            background: #2e7d32;
            color: white;
        }

            .action-btn.view:hover {
                background: #1b5e20;
                color: white;
                transform: translateY(-1px);
            }

        .action-btn.edit {
            background: #1976d2;
            color: white;
        }

            .action-btn.edit:hover {
                background: #1565c0;
                color: white;
                transform: translateY(-1px);
            }

    .alert {
        padding: 20px 25px;
        margin: 20px 0;
        border-radius: 10px;
        font-weight: 500;
        font-size: 1rem;
    }

    .alert-success {
        background: linear-gradient(135deg, #e8f5e9 0%, #c8e6c9 100%);
        color: #1b5e20;
        border-left: 5px solid #4caf50;
    }

    .alert-info {
        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
        color: #0d47a1;
        border-left: 5px solid #2196f3;
    }

    .filter-section {
        background: #f8f9fa;
        padding: 25px;
        border-radius: 10px;
        margin-bottom: 25px;
        border: 1px solid #e0e0e0;
        display: none;
    }

        .filter-section.active {
            display: block;
        }

    .filter-form {
        display: flex;
        gap: 20px;
        align-items: end;
        flex-wrap: wrap;
    }

    .filter-group {
        flex: 1;
        min-width: 200px;
    }

        .filter-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2e7d32;
        }

        .filter-group input {
            width: 100%;
            padding: 10px;
            border: 2px solid #e0e0e0;
            border-radius: 6px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

            .filter-group input:focus {
                outline: none;
                border-color: #2e7d32;
            }

    .availability-indicator {
        padding: 4px 10px;
        border-radius: 15px;
        font-size: 0.85rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .highly-available {
        background: #e8f5e9;
        color: #2e7d32;
    }

    .available {
        background: #fff3e0;
        color: #ef6c00;
    }

    .busy {
        background: #ffebee;
        color: #c62828;
    }
</style>

<div class="dashboard-container">
    <div class="sidebar">
        <h3>🎛️ Manager Hub</h3>
        <a href="#" class="nav-link active">
            <i>📊</i> Dashboard
        </a>
        <a asp-controller="Ticket" asp-action="ManagerCreate" class="nav-link">
            <i>➕</i> Create Ticket
        </a>
        <a href="#" class="nav-link" onclick="toggleFilters()">
            <i>🔍</i> Filter Tickets
        </a>
        <a href="#" class="nav-link">
            <i>📈</i> Reports
        </a>
        <a href="#" class="nav-link">
            <i>⚙️</i> Settings
        </a>

        <form asp-controller="Account" asp-action="Logout" method="post" style="display:inline;">
            <button type="submit" class="logout-btn">🚪 Logout</button>
        </form>
    </div>

    <div class="main-content">
        <div class="header">
            <h1>Manager Dashboard</h1>
            <p>Welcome back! Here's what's happening with your support tickets today.</p>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                ✅ @TempData["SuccessMessage"]
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-info">
                ⚠️ @TempData["ErrorMessage"]
            </div>
        }

        <!-- Statistics Cards -->
        <div class="stats-grid">
            <div class="stat-card primary">
                <div class="stat-number">@(Model.GroupedTickets?.SelectMany(g => g).Count() ?? 0)</div>
                <div class="stat-label">Total Tickets</div>
            </div>
            <div class="stat-card info">
                <div class="stat-number">@(Model.AvailableAgents?.Count ?? 0)</div>
                <div class="stat-label">Available Agents</div>
            </div>
            <div class="stat-card warning">
                <div class="stat-number">@(Model.GroupedTickets?.SelectMany(g => g).Count(t => t.Status?.StatusName == "Open") ?? 0)</div>
                <div class="stat-label">Open Tickets</div>
            </div>
            <div class="stat-card success">
                <div class="stat-number">@(Model.GroupedTickets?.SelectMany(g => g).Count(t => t.AssignedTo.HasValue) ?? 0)</div>
                <div class="stat-label">Assigned Tickets</div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="action-buttons">
            <a asp-controller="Ticket" asp-action="ManagerCreate" class="btn btn-primary">
                ➕ Create New Ticket
            </a>
            <button onclick="toggleFilters()" class="btn btn-secondary">
                🔍 Toggle Filters
            </button>
            <a href="#agents-section" class="btn btn-success">
                👥 View Agents
            </a>
        </div>

        <!-- Filter Section -->
        <div id="filterSection" class="filter-section">
            <form method="get" class="filter-form">
                <div class="filter-group">
                    <label for="startDate">📅 Start Date:</label>
                    <input type="date" name="startDate" id="startDate" value="@Model.StartDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="filter-group">
                    <label for="endDate">📅 End Date:</label>
                    <input type="date" name="endDate" id="endDate" value="@Model.EndDate?.ToString("yyyy-MM-dd")">
                </div>
                <div class="filter-group">
                    <button type="submit" class="btn btn-primary">Apply Filter</button>
                </div>
                <div class="filter-group">
                    <a asp-action="Index" class="btn btn-secondary">Clear Filter</a>
                </div>
            </form>
        </div>

        <!-- Tickets by Category -->
        <div class="section-card">
            <div class="section-header">
                🎫 Tickets by Category
                <span>@(Model.StartDate?.ToString("MMM dd") ?? "Last 30 days") - @(Model.EndDate?.ToString("MMM dd, yyyy") ?? DateTime.Now.ToString("MMM dd, yyyy"))</span>
            </div>
            <div class="section-content">
                @if (Model.GroupedTickets != null && Model.GroupedTickets.Any())
                {
                    @foreach (var group in Model.GroupedTickets)
                    {
                        <div class="category-section">
                            <div class="category-header">
                                <span>📂 @(group.Key?.CategoryName ?? "Unknown Category")</span>
                                <span class="ticket-count-badge">@group.Count() tickets</span>
                            </div>
                            <div class="table-container">
                                <table>
                                    <thead>
                                        <tr>
                                            <th>Title</th>
                                            <th>Status</th>
                                            <th>Priority</th>
                                            <th>Assigned To</th>
                                            <th>Created By</th>
                                            <th>Created</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var ticket in group.OrderByDescending(t => t.CreatedAt))
                                        {
                                            <tr>
                                                <td style="font-weight: 600; max-width: 200px;">
                                                    @(ticket.Title?.Length > 50 ? ticket.Title.Substring(0, 50) + "..." : ticket.Title ?? "No Title")
                                                </td>
                                                <td>
                                                    <span class="status-badge status-@(ticket.Status?.StatusName?.ToLower() ?? "unknown")">
                                                        @(ticket.Status?.StatusName ?? "No Status")
                                                    </span>
                                                </td>
                                                <td>
                                                    <span class="priority-badge priority-@(ticket.Priority?.PriorityName?.ToLower() ?? "unknown")">
                                                        @(ticket.Priority?.PriorityName ?? "No Priority")
                                                    </span>
                                                </td>
                                                <td>
                                                    @if (ticket.AssignedToUser != null)
                                                    {
                                                        <strong>@ticket.AssignedToUser.FullName</strong>
                                                    }
                                                    else
                                                    {
                                                        <span style="color: #999; font-style: italic;">Unassigned</span>
                                                    }
                                                </td>
                                                <td>@(ticket.CreatedByUser?.FullName ?? "Unknown")</td>
                                                <td>
                                                    <div>@ticket.CreatedAt.ToString("MMM dd, yyyy")</div>
                                                    <small style="color: #666;">@ticket.CreatedAt.ToString("HH:mm")</small>
                                                </td>
                                                <td>
                                                    <a asp-controller="Ticket" asp-action="Details" asp-route-id="@ticket.TicketID"
                                                       class="action-btn view" title="View Details">👁️ View</a>
                                                    <a asp-controller="Ticket" asp-action="Edit" asp-route-id="@ticket.TicketID"
                                                       class="action-btn edit" title="Edit Ticket">✏️ Edit</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="alert alert-info" style="margin: 25px;">
                        📋 No tickets found for the selected criteria.
                        <a asp-controller="Ticket" asp-action="ManagerCreate" style="color: #0d47a1; font-weight: 600;">Create the first ticket</a>
                    </div>
                }
            </div>
        </div>

        <!-- Available Agents Section -->
        <div class="section-card" id="agents-section">
            <div class="section-header">
                👥 Available Agents
                <span>Less than 5 active tickets</span>
            </div>
            <div class="section-content">
                @if (Model.AvailableAgents != null && Model.AvailableAgents.Any())
                {
                    <div class="table-container">
                        <table>
                            <thead>
                                <tr>
                                    <th>Agent Name</th>
                                    <th>Email</th>
                                    <th>Active Tickets</th>
                                    <th>Availability</th>
                                    <th>Last Activity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var agent in Model.AvailableAgents.OrderBy(a => a.AssignedTickets?.Count ?? 0))
                                {
                                    var ticketCount = agent.AssignedTickets?.Count(t => t.Status?.StatusName != "Closed" && t.Status?.StatusName != "Resolved") ?? 0;
                                    <tr>
                                        <td style="font-weight: 600;">
                                            👤 @(agent.FullName ?? "No Name")
                                        </td>
                                        <td>
                                            <a href="mailto:@agent.Email" style="color: #1976d2;">
                                                @(agent.Email ?? "No Email")
                                            </a>
                                        </td>
                                        <td>
                                            <span class="status-badge @(ticketCount == 0 ? "status-assigned" : ticketCount < 3 ? "priority-medium" : "priority-high")">
                                                @ticketCount tickets
                                            </span>
                                        </td>
                                        <td>
                                            <span class="availability-indicator @(ticketCount == 0 ? "highly-available" : ticketCount < 3 ? "available" : "busy")">
                                                @(ticketCount == 0 ? "🟢 Highly Available" : ticketCount < 3 ? "🟡 Available" : "🔴 Busy")
                                            </span>
                                        </td>
                                        <td>
                                            <small style="color: #666;">
                                                @(agent.AssignedTickets?.OrderByDescending(t => t.CreatedAt).FirstOrDefault()?.CreatedAt.ToString("MMM dd, HH:mm") ?? "No recent activity")
                                            </small>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info" style="margin: 25px;">
                        👥 No available agents found with less than 5 active tickets. All agents are currently at capacity.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function toggleFilters() {
        const filterSection = document.getElementById('filterSection');
        filterSection.classList.toggle('active');

        // Smooth scroll to filter section when opening
        if (filterSection.classList.contains('active')) {
            filterSection.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }
    }

    // Auto-hide success messages after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(alert => {
            setTimeout(() => {
                alert.style.opacity = '0';
                alert.style.transform = 'translateY(-20px)';
                setTimeout(() => alert.remove(), 300);
            }, 5000);
        });
    });

    // Add smooth scrolling for anchor links
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const target = document.querySelector(this.getAttribute('href'));
            if (target) {
                target.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        });
    });
</script>