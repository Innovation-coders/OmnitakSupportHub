@model OmnitakSupportHub.Models.ViewModels.AgentDashboardViewModel
@{
    ViewData["Title"] = "Support Agent Dashboard";
    Layout = null; 
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Omnitak Support Hub</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            
            --primary-dark: #0A0F1C;
            --primary-navy: #1A237E;
            --accent-cyan: #00D9FF;
            --accent-purple: #6B46C1;
            --accent-green: #10B981;
            --accent-orange: #F59E0B;
            --accent-red: #EF4444;
            --accent-blue: #3B82F6;
        
            --surface-dark: #0F172A;
            --surface-card: #1E293B;
            --surface-elevated: #334155;
            --surface-glass: rgba(255, 255, 255, 0.05);
            --surface-glass-strong: rgba(255, 255, 255, 0.1);
           
            --text-primary: #FFFFFF;
            --text-secondary: rgba(255, 255, 255, 0.8);
            --text-muted: rgba(255, 255, 255, 0.6);
            --text-subtle: rgba(255, 255, 255, 0.4);
           
            --gradient-primary: linear-gradient(135deg, #0A0F1C 0%, #1A237E 50%, #6B46C1 100%);
            --gradient-card: linear-gradient(135deg, #1E293B 0%, #334155 100%);
            --gradient-accent: linear-gradient(45deg, #00D9FF, #6B46C1);
            --gradient-success: linear-gradient(45deg, #10B981, #059669);
            --gradient-warning: linear-gradient(45deg, #F59E0B, #D97706);
            --gradient-danger: linear-gradient(45deg, #EF4444, #DC2626);
            --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
            --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            --shadow-glow: 0 0 20px rgba(0, 217, 255, 0.3);
            --shadow-glow-strong: 0 0 40px rgba(0, 217, 255, 0.5);
           
            --radius-sm: 8px;
            --radius-md: 12px;
            --radius-lg: 16px;
            --radius-xl: 24px;
          
            --space-xs: 4px;
            --space-sm: 8px;
            --space-md: 16px;
            --space-lg: 24px;
            --space-xl: 32px;
            --space-2xl: 48px;
          
            --transition-fast: 0.15s ease;
            --transition-normal: 0.3s ease;
            --transition-slow: 0.5s ease;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', system-ui, -apple-system, sans-serif;
            background: var(--gradient-primary);
            color: var(--text-primary);
            min-height: 100vh;
            line-height: 1.6;
            overflow-x: hidden;
        }


        .background-effects {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: none;
        }

        .floating-shapes {
            position: absolute;
            width: 100%;
            height: 100%;
        }

        .shape {
            position: absolute;
            border-radius: 50%;
            background: var(--gradient-accent);
            opacity: 0.03;
            animation: float 20s infinite ease-in-out;
        }

            .shape:nth-child(1) {
                width: 300px;
                height: 300px;
                top: 10%;
                left: -5%;
                animation-delay: 0s;
            }

            .shape:nth-child(2) {
                width: 200px;
                height: 200px;
                top: 60%;
                right: -5%;
                animation-delay: -7s;
            }

            .shape:nth-child(3) {
                width: 150px;
                height: 150px;
                bottom: 20%;
                left: 30%;
                animation-delay: -14s;
            }

        @@keyframes float {
            0%, 100% {
                transform: translateY(0) rotate(0deg);
            }

            25% {
                transform: translateY(-30px) rotate(90deg);
            }

            50% {
                transform: translateY(20px) rotate(180deg);
            }

            75% {
                transform: translateY(-20px) rotate(270deg);
            }
        }

      
        .dashboard-container {
            display: flex;
            min-height: 100vh;
            position: relative;
            z-index: 1;
        }

       
        .sidebar {
            width: 300px;
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(20px);
            border-right: 1px solid rgba(255, 255, 255, 0.1);
            padding: var(--space-xl);
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: all var(--transition-normal);
            z-index: 100;
        }

        .sidebar-header {
            text-align: center;
            margin-bottom: var(--space-xl);
            animation: slideInLeft 0.8s ease;
        }

        .logo {
            width: 64px;
            height: 64px;
            background: var(--gradient-accent);
            border-radius: var(--radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            font-weight: 800;
            margin: 0 auto var(--space-md);
            box-shadow: var(--shadow-glow);
            animation: pulse 3s infinite;
        }

        @@keyframes pulse {
            0%, 100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        .sidebar-title {
            font-size: 20px;
            font-weight: 700;
            background: var(--gradient-accent);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: var(--space-xs);
        }

        .sidebar-subtitle {
            font-size: 12px;
            color: var(--text-muted);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        /* Agent Profile Enhanced */
        .agent-profile {
            background: var(--surface-glass-strong);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-lg);
            padding: var(--space-lg);
            margin-bottom: var(--space-xl);
            animation: slideInLeft 1s ease;
            position: relative;
            overflow: hidden;
        }

            .agent-profile::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 3px;
                background: var(--gradient-accent);
                border-radius: var(--radius-lg) var(--radius-lg) 0 0;
            }

        .agent-avatar {
            width: 56px;
            height: 56px;
            background: var(--gradient-accent);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            font-weight: 700;
            color: white;
            margin: 0 auto var(--space-md);
            box-shadow: 0 4px 16px rgba(0, 217, 255, 0.4);
        }

        .agent-name {
            font-size: 16px;
            font-weight: 600;
            text-align: center;
            margin-bottom: var(--space-xs);
        }

        .agent-role {
            font-size: 12px;
            color: var(--text-muted);
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: var(--space-sm);
        }

        .agent-team {
            font-size: 12px;
            color: var(--text-secondary);
            text-align: center;
            padding: var(--space-xs) var(--space-sm);
            background: rgba(255, 255, 255, 0.05);
            border-radius: var(--radius-sm);
        }

        /* Navigation Menu */
        .nav-menu {
            list-style: none;
            margin-bottom: var(--space-xl);
        }

        .nav-item {
            margin-bottom: var(--space-sm);
            animation: slideInLeft 1s ease;
            animation-delay: calc(var(--delay) * 0.1s);
            animation-fill-mode: both;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: var(--space-md) var(--space-lg);
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: var(--radius-md);
            transition: all var(--transition-normal);
            font-weight: 500;
            position: relative;
            overflow: hidden;
        }

            .nav-link:hover {
                color: var(--text-primary);
                background: var(--surface-glass);
                transform: translateX(8px);
                box-shadow: 0 4px 20px rgba(0, 217, 255, 0.2);
            }

            .nav-link.active {
                background: var(--gradient-accent);
                color: white;
                box-shadow: var(--shadow-glow);
            }

        .nav-icon {
            font-size: 18px;
            margin-right: var(--space-md);
            width: 24px;
            text-align: center;
        }

        .nav-badge {
            background: var(--accent-red);
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            margin-left: auto;
            font-weight: 600;
        }

        /* Logout Section */
        .logout-section {
            margin-top: auto;
            padding-top: var(--space-xl);
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .logout-btn {
            width: 100%;
            padding: var(--space-md);
            background: var(--gradient-danger);
            border: none;
            border-radius: var(--radius-md);
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all var(--transition-normal);
            display: flex;
            align-items: center;
            justify-content: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .logout-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(239, 68, 68, 0.4);
            }

        /* Main Content Area */
        .main-content {
            flex: 1;
            margin-left: 300px;
            padding: var(--space-xl);
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            min-height: 100vh;
        }

        .content-header {
            margin-bottom: var(--space-2xl);
            animation: slideInRight 0.8s ease;
        }

        .welcome-title {
            font-size: 2.5rem;
            font-weight: 800;
            background: var(--gradient-accent);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: var(--space-sm);
        }

        .welcome-subtitle {
            font-size: 1.125rem;
            color: var(--text-secondary);
        }

        /* Performance Overview Section */
        .performance-overview {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-xl);
            padding: var(--space-lg);
            margin-bottom: var(--space-xl);
            animation: fadeInUp 1s ease;
        }

        .performance-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
            gap: var(--space-lg);
            text-align: center;
        }

        .performance-metric {
            position: relative;
        }

        .metric-value {
            font-size: 1.5rem;
            font-weight: 800;
            margin-bottom: var(--space-sm);
        }

        .metric-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .metric-trend {
            font-size: 0.75rem;
            margin-top: var(--space-xs);
            padding: 2px 8px;
            border-radius: 12px;
            display: inline-block;
        }

        .trend-excellent {
            background: rgba(16, 185, 129, 0.2);
            color: var(--accent-green);
        }

        .trend-good {
            background: rgba(59, 130, 246, 0.2);
            color: var(--accent-blue);
        }

        .trend-moderate {
            background: rgba(245, 158, 11, 0.2);
            color: var(--accent-orange);
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: var(--space-lg);
            margin-bottom: var(--space-2xl);
        }

        .stat-card {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-xl);
            padding: var(--space-xl);
            position: relative;
            overflow: hidden;
            transition: all 0.4s ease;
            animation: fadeInUp 1s ease;
            animation-delay: calc(var(--delay) * 0.15s);
            animation-fill-mode: both;
        }

            .stat-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-xl);
                border-color: var(--accent-cyan);
            }

            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: var(--gradient-accent);
                border-radius: var(--radius-xl) var(--radius-xl) 0 0;
            }

        .stat-icon {
            width: 64px;
            height: 64px;
            background: var(--gradient-accent);
            border-radius: var(--radius-lg);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            margin-bottom: var(--space-md);
            box-shadow: 0 8px 20px rgba(0, 217, 255, 0.3);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 800;
            color: var(--text-primary);
            margin-bottom: var(--space-sm);
        }

        .stat-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            font-weight: 500;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .kb-card {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-xl);
            overflow: hidden;
            transition: all 0.4s ease;
            position: relative;
        }

            .kb-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-xl);
                border-color: var(--accent-blue);
            }

            .kb-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(45deg, var(--accent-blue), var(--accent-cyan));
            }

        .kb-header {
            padding: var(--space-lg) var(--space-lg) var(--space-md);
        }

            .kb-header h6 {
                font-size: 1rem;
                font-weight: 600;
                color: var(--text-primary);
                margin-bottom: var(--space-xs);
            }

            .kb-header small {
                color: var(--text-muted);
                font-size: 0.75rem;
            }

        .kb-body {
            padding: 0 var(--space-lg) var(--space-lg);
        }

        .kb-stats {
            text-align: center;
            margin-bottom: var(--space-lg);
        }

        .kb-count {
            font-size: 2rem;
            font-weight: 800;
            background: linear-gradient(45deg, var(--accent-blue), var(--accent-cyan));
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: var(--space-xs);
        }

        .kb-count-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
        }

        .kb-actions {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: var(--space-sm);
        }

        .kb-btn {
            padding: var(--space-sm) var(--space-md);
            border: 1px solid rgba(59, 130, 246, 0.3);
            border-radius: var(--radius-sm);
            background: rgba(59, 130, 246, 0.1);
            color: var(--accent-blue);
            text-decoration: none;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all var(--transition-normal);
            display: flex;
            align-items: center;
            justify-content: center;
            gap: var(--space-xs);
        }

            .kb-btn:hover {
                background: var(--accent-blue);
                color: white;
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
            }

            .kb-btn.primary {
                background: var(--accent-blue);
                color: white;
                border-color: var(--accent-blue);
            }

                .kb-btn.primary:hover {
                    background: #2563eb;
                    box-shadow: 0 4px 12px rgba(59, 130, 246, 0.5);
                }

     
        .search-filter-section {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-xl);
            padding: var(--space-xl);
            margin-bottom: var(--space-xl);
            animation: fadeInUp 1.2s ease;
        }

        .search-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: var(--space-lg);
        }

        .search-title {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--text-primary);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .filter-form {
            display: grid;
            grid-template-columns: 2fr 1fr 1fr auto;
            gap: var(--space-lg);
            align-items: end;
        }

        .form-group {
            position: relative;
        }

        .form-label {
            display: block;
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--space-sm);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .form-control {
            width: 100%;
            padding: var(--space-md);
            background: var(--surface-elevated);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: var(--radius-md);
            color: var(--text-primary);
            font-size: 0.875rem;
            font-family: 'Inter', sans-serif;
            transition: all var(--transition-normal);
        }

            .form-control:focus {
                outline: none;
                border-color: var(--accent-cyan);
                background: var(--surface-card);
                box-shadow: 0 0 0 3px rgba(0, 217, 255, 0.1);
            }

            .form-control::placeholder {
                color: var(--text-muted);
            }

        .search-box {
            position: relative;
        }

        .search-icon {
            position: absolute;
            left: var(--space-md);
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
            font-size: 16px;
        }

        .search-input {
            padding-left: 48px;
        }

        .btn {
            padding: var(--space-md) var(--space-lg);
            border: none;
            border-radius: var(--radius-md);
            font-weight: 600;
            cursor: pointer;
            transition: all var(--transition-normal);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: var(--space-sm);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.875rem;
        }

        .btn-primary {
            background: var(--gradient-accent);
            color: white;
            box-shadow: var(--shadow-glow);
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-glow-strong);
            }

       
        .tickets-section {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-xl);
            margin-bottom: var(--space-xl);
            overflow: hidden;
            animation: fadeInUp 1.4s ease;
        }

        .section-header {
            background: var(--gradient-accent);
            padding: var(--space-lg) var(--space-xl);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .section-title {
            font-size: 1.25rem;
            font-weight: 700;
            color: white;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .urgent-badge {
            background: rgba(239, 68, 68, 0.2);
            color: var(--accent-red);
            padding: var(--space-sm) var(--space-md);
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border: 1px solid rgba(239, 68, 68, 0.3);
            animation: pulse 2s infinite;
        }

        .section-content {
            padding: var(--space-xl);
        }

        /* Ticket Cards */
        .ticket-card {
            background: var(--surface-elevated);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-lg);
            padding: var(--space-lg);
            margin-bottom: var(--space-lg);
            transition: all var(--transition-normal);
            position: relative;
            overflow: hidden;
        }

            .ticket-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 12px 28px rgba(0, 0, 0, 0.4);
                border-color: var(--accent-cyan);
            }

        .ticket-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: var(--space-md);
        }

        .ticket-id {
            font-size: 0.875rem;
            font-weight: 700;
            color: var(--accent-cyan);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .ticket-date {
            font-size: 0.75rem;
            color: var(--text-muted);
        }

        .ticket-title {
            font-size: 1.125rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--space-md);
            line-height: 1.3;
        }

        .ticket-description {
            font-size: 0.875rem;
            color: var(--text-secondary);
            line-height: 1.5;
            margin-bottom: var(--space-md);
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .ticket-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: var(--space-lg);
        }

        .ticket-customer {
            font-size: 0.75rem;
            color: var(--text-muted);
            display: flex;
            align-items: center;
            gap: var(--space-xs);
        }

        .ticket-badges {
            display: flex;
            gap: var(--space-sm);
        }

      
        .badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .priority-high {
            background: rgba(239, 68, 68, 0.2);
            color: var(--accent-red);
        }

        .priority-medium {
            background: rgba(245, 158, 11, 0.2);
            color: var(--accent-orange);
        }

        .priority-low {
            background: rgba(16, 185, 129, 0.2);
            color: var(--accent-green);
        }

        .status-new {
            background: rgba(0, 217, 255, 0.2);
            color: var(--accent-cyan);
        }

        .status-assigned {
            background: rgba(59, 130, 246, 0.2);
            color: var(--accent-blue);
        }

        .status-in-progress {
            background: rgba(245, 158, 11, 0.2);
            color: var(--accent-orange);
        }

        .status-pending-user {
            background: rgba(107, 70, 193, 0.2);
            color: var(--accent-purple);
        }

        .status-resolved {
            background: rgba(16, 185, 129, 0.2);
            color: var(--accent-green);
        }

       
        .ticket-actions {
            display: flex;
            gap: var(--space-sm);
            flex-wrap: wrap;
            margin-bottom: var(--space-md);
        }

        .btn-action {
            padding: var(--space-sm) var(--space-md);
            border: none;
            border-radius: var(--radius-sm);
            font-weight: 600;
            cursor: pointer;
            transition: all var(--transition-normal);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: var(--space-xs);
            font-size: 0.75rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-view {
            background: rgba(0, 217, 255, 0.2);
            color: var(--accent-cyan);
            border: 1px solid rgba(0, 217, 255, 0.3);
        }

            .btn-view:hover {
                background: var(--accent-cyan);
                color: white;
            }

        .btn-start {
            background: rgba(245, 158, 11, 0.2);
            color: var(--accent-orange);
            border: 1px solid rgba(245, 158, 11, 0.3);
        }

            .btn-start:hover {
                background: var(--accent-orange);
                color: white;
            }

        .btn-resolve {
            background: rgba(16, 185, 129, 0.2);
            color: var(--accent-green);
            border: 1px solid rgba(16, 185, 129, 0.3);
        }

            .btn-resolve:hover {
                background: var(--accent-green);
                color: white;
            }

        
        .quick-comment {
            display: flex;
            gap: var(--space-sm);
            margin-bottom: var(--space-md);
        }

        .comment-input {
            flex: 1;
            padding: var(--space-sm) var(--space-md);
            background: var(--surface-dark);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: var(--radius-sm);
            color: var(--text-primary);
            font-size: 0.75rem;
        }

        .comment-btn {
            padding: var(--space-sm) var(--space-md);
            background: var(--gradient-accent);
            color: white;
            border: none;
            border-radius: var(--radius-sm);
            cursor: pointer;
            transition: all var(--transition-normal);
        }

            .comment-btn:hover {
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(0, 217, 255, 0.4);
            }

    
        .chat-preview {
            background: rgba(255, 255, 255, 0.02);
            border-radius: var(--radius-sm);
            padding: var(--space-md);
            border-left: 3px solid var(--accent-cyan);
        }

        .chat-header {
            font-size: 0.75rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: var(--space-sm);
        }

        .chat-message {
            font-size: 0.75rem;
            color: var(--text-secondary);
            margin-bottom: var(--space-xs);
        }

        .message-sender {
            font-weight: 600;
            color: var(--text-primary);
        }

        .message-time {
            font-size: 0.625rem;
            color: var(--text-muted);
        }

      
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--text-muted);
        }

        .empty-icon {
            font-size: 64px;
            margin-bottom: var(--space-lg);
            opacity: 0.5;
        }

        .empty-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: var(--space-md);
        }

        .empty-subtitle {
            font-size: 1rem;
            margin-bottom: var(--space-xl);
            line-height: 1.5;
        }

       
        .alert {
            padding: var(--space-md) var(--space-lg);
            border-radius: var(--radius-md);
            margin-bottom: var(--space-lg);
            border-left: 4px solid;
            backdrop-filter: blur(10px);
            animation: slideInDown 0.5s ease;
        }

        .alert-success {
            background: rgba(16, 185, 129, 0.1);
            border-left-color: var(--accent-green);
            color: var(--accent-green);
        }

        .alert-danger {
            background: rgba(239, 68, 68, 0.1);
            border-left-color: var(--accent-red);
            color: var(--accent-red);
        }

        /* Mobile Responsiveness */
        @@media (max-width: 1024px) {
            .sidebar {
                transform: translateX(-100%);
                z-index: 1000;
            }

                .sidebar.open {
                    transform: translateX(0);
                }

            .main-content {
                margin-left: 0;
            }

            .stats-grid {
                grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            }

            .filter-form {
                grid-template-columns: 1fr;
                gap: var(--space-md);
            }
        }

        @@media (max-width: 768px) {
            .main-content {
                padding: var(--space-md);
            }

            .stats-grid {
                grid-template-columns: 1fr;
            }

            .performance-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .welcome-title {
                font-size: 2rem;
            }

            .ticket-actions {
                flex-direction: column;
            }

            .btn-action {
                justify-content: center;
            }
        }

        
        .mobile-menu-btn {
            display: none;
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1001;
            background: var(--gradient-accent);
            border: none;
            border-radius: var(--radius-md);
            padding: var(--space-md);
            color: white;
            cursor: pointer;
            font-size: 20px;
            box-shadow: var(--shadow-glow);
        }

        @@media (max-width: 1024px) {
            .mobile-menu-btn {
                display: block;
            }
        }

       
        @@keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-30px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @@keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(30px);
            }

            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @@keyframes slideInDown {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
  
    <div class="background-effects">
        <div class="floating-shapes">
            <div class="shape"></div>
            <div class="shape"></div>
            <div class="shape"></div>
        </div>
    </div>

 
    <button class="mobile-menu-btn" onclick="toggleSidebar()">
        <i class="bi bi-list"></i>
    </button>

    <div class="dashboard-container">
      
        <aside class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="logo">A</div>
                <h3 class="sidebar-title">Agent Portal</h3>
                <p class="sidebar-subtitle">Support Hub</p>
            </div>

            
            <div class="agent-profile">
                <div class="agent-avatar">
                    @(Model.AgentName?.Substring(0, 1).ToUpper() ?? "A")
                </div>
                <div class="agent-name">@Model.AgentName</div>
                <div class="agent-role">@Model.AgentRole</div>
                <div class="agent-team">@Model.TeamName</div>
            </div>

            <nav>
                <ul class="nav-menu">
                    <li class="nav-item" style="--delay: 1">
                        <a href="#" class="nav-link active">
                            <i class="nav-icon bi bi-speedometer2"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 2">
                        <a href="#my-tickets" class="nav-link" onclick="scrollToSection('my-tickets')">
                            <i class="nav-icon bi bi-ticket-detailed"></i>
                            My Tickets
                            @if (Model.AssignedToMe > 0)
                            {
                                <span class="nav-badge">@Model.AssignedToMe</span>
                            }
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 3">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-journal-text"></i>
                            Knowledge Base
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 4">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-clock-history"></i>
                            Activity Log
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 5">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-gear"></i>
                            Settings
                        </a>
                    </li>
                </ul>
            </nav>

            <div class="logout-section">
                <form asp-controller="Account" asp-action="Logout" method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="logout-btn">
                        <i class="bi bi-box-arrow-right"></i>
                        Sign Out
                    </button>
                </form>
            </div>
        </aside>

     
        <main class="main-content">
            <div class="content-header">
                <div class="welcome-section">
                    <h1 class="welcome-title">Agent Dashboard</h1>
                    <p class="welcome-subtitle">Manage and resolve customer tickets efficiently with intelligent tools.</p>
                </div>
            </div>

        
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <i class="bi bi-check-circle"></i>
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle"></i>
                    @TempData["ErrorMessage"]
                </div>
            }

            <!-- Performance Overview -->
            <div class="performance-overview">
                <div class="performance-grid">
                    <div class="performance-metric">
                        <div class="metric-value @Model.GetWorkloadStatusClass()">@Model.GetWorkloadStatus()</div>
                        <div class="metric-label">Current Workload</div>
                        <div class="metric-trend trend-@Model.GetWorkloadStatus().ToLower()">
                            @Model.GetWorkloadStatus() Load
                        </div>
                    </div>
                    <div class="performance-metric">
                        <div class="metric-value text-info">@Model.ResolvedToday</div>
                        <div class="metric-label">Resolved Today</div>
                        <div class="metric-trend trend-@Model.GetResolutionTrend().ToLower()">
                            <i class="@Model.GetResolutionTrendIcon() me-1"></i>
                            @Model.GetResolutionTrend()
                        </div>
                    </div>
                    <div class="performance-metric">
                        <div class="metric-value @Model.GetSLAStatusClass()">@Model.GetSLAStatus()</div>
                        <div class="metric-label">SLA Performance</div>
                        <div class="metric-trend trend-good">On Track</div>
                    </div>
                    <div class="performance-metric">
                        <div class="metric-value">@Model.AverageResponseTime.ToString("F1")h</div>
                        <div class="metric-label">Avg Response</div>
                        <div class="metric-trend trend-excellent">Efficient</div>
                    </div>
                </div>
            </div>

            <!-- Statistics Cards -->
            <div class="stats-grid">
                <div class="stat-card" style="--delay: 1">
                    <div class="stat-icon">
                        <i class="bi bi-clipboard-data"></i>
                    </div>
                    <div class="stat-number">@Model.AssignedToMe</div>
                    <div class="stat-label">Assigned to Me</div>
                </div>

                <div class="stat-card" style="--delay: 2">
                    <div class="stat-icon">
                        <i class="bi bi-plus-circle"></i>
                    </div>
                    <div class="stat-number">@Model.NewTickets</div>
                    <div class="stat-label">New Tickets</div>
                </div>

                <div class="stat-card" style="--delay: 3">
                    <div class="stat-icon">
                        <i class="bi bi-hourglass-split"></i>
                    </div>
                    <div class="stat-number">@Model.InProgress</div>
                    <div class="stat-label">In Progress</div>
                </div>

                <div class="stat-card" style="--delay: 4">
                    <div class="stat-icon">
                        <i class="bi bi-check-circle"></i>
                    </div>
                    <div class="stat-number">@Model.ResolvedToday</div>
                    <div class="stat-label">Resolved Today</div>
                </div>

                <div class="stat-card" style="--delay: 5">
                    <div class="stat-icon">
                        <i class="bi bi-exclamation-triangle"></i>
                    </div>
                    <div class="stat-number">@Model.OverdueTickets</div>
                    <div class="stat-label">Overdue</div>
                </div>

                <div class="stat-card" style="--delay: 6">
                    <div class="stat-icon">
                        <i class="bi bi-flag"></i>
                    </div>
                    <div class="stat-number">@Model.HighPriorityTickets</div>
                    <div class="stat-label">High Priority</div>
                </div>

               
                <div class="stat-card kb-card" style="--delay: 7">
                    <div class="kb-header">
                        <h6>Knowledge Base</h6>
                        <small>Manage articles & guides</small>
                    </div>
                    <div class="kb-body">
                        <div class="kb-stats">
                            <div class="kb-count">@ViewBag.TotalKBArticles</div>
                            <div class="kb-count-label">Total Articles</div>
                        </div>
                        <div class="kb-actions">
                            <a href="/AgentDashboard/KnowledgeBase" class="kb-btn">
                                <i class="bi bi-search"></i>
                                Browse
                            </a>
                            <a href="/AgentDashboard/CreateArticle" class="kb-btn primary">
                                <i class="bi bi-plus"></i>
                                Create
                            </a>
                        </div>
                    </div>
                </div>
            </div>

     
            <div class="search-filter-section">
                <div class="search-header">
                    <h3 class="search-title">
                        <i class="bi bi-funnel me-2"></i>
                        Filter & Search Tickets
                    </h3>
                </div>
                <form method="get" asp-action="Index">
                    <div class="filter-form">
                        <div class="form-group">
                            <label class="form-label">Search Tickets</label>
                            <div class="search-box">
                                <i class="bi bi-search search-icon"></i>
                                <input type="text"
                                       name="searchTerm"
                                       value="@Model.CurrentSearchTerm"
                                       class="form-control search-input"
                                       placeholder="Search by title, description, or customer...">
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Status</label>
                            <select name="statusFilter" class="form-control">
                                <option value="">All Status</option>
                                @foreach (var status in Model.AvailableStatuses)
                                {
                                    <option value="@status" selected="@(Model.CurrentStatusFilter == status)">@status</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Priority</label>
                            <select name="priorityFilter" class="form-control">
                                <option value="">All Priority</option>
                                @foreach (var priority in Model.AvailablePriorities)
                                {
                                    <option value="@priority" selected="@(Model.CurrentPriorityFilter == priority)">@priority</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-search"></i>
                                Filter
                            </button>
                        </div>
                    </div>
                </form>
            </div>

        
            <div id="my-tickets" class="tickets-section">
                <div class="section-header">
                    <h2 class="section-title">
                        <i class="bi bi-ticket-perforated me-2"></i>
                        My Tickets (@Model.AssignedTickets.Count)
                    </h2>
                    @if (Model.HasUrgentTickets())
                    {
                        <div class="urgent-badge">
                            <i class="bi bi-exclamation-triangle me-1"></i>
                            Urgent Action Required
                        </div>
                    }
                </div>

                <div class="section-content">
                    @if (Model.AssignedTickets.Any())
                    {
                        @foreach (var ticket in Model.AssignedTickets)
                        {
                            <div class="ticket-card">
                                <div class="ticket-header">
                                    <div class="ticket-id">Ticket #@ticket.TicketID</div>
                                    <div class="ticket-date">@ticket.CreatedAt.ToString("MMM dd, yyyy")</div>
                                </div>

                                <h3 class="ticket-title">@ticket.Title</h3>
                                <p class="ticket-description">@ticket.Description</p>

                                <div class="ticket-meta">
                                    <div class="ticket-customer">
                                        <i class="bi bi-person"></i>
                                        @ticket.CreatedByUser?.FullName
                                    </div>
                                    <div class="ticket-badges">
                                        <span class="badge priority-@(ticket.Priority?.PriorityName?.ToLower() ?? "low")">
                                            <i class="bi bi-flag me-1"></i>@(ticket.Priority?.PriorityName ?? "Low")
                                        </span>
                                        <span class="badge status-@(ticket.Status?.StatusName?.ToLower()?.Replace(" ", "-") ?? "new")">
                                            @(ticket.Status?.StatusName ?? "New")
                                        </span>
                                    </div>
                                </div>

                                <div class="ticket-actions">
                                    <a href="/AgentDashboard/TicketDetails/@ticket.TicketID" class="btn-action btn-view">
                                        <i class="bi bi-eye"></i>
                                        View Details
                                    </a>

                                    @if (ticket.Status?.StatusName != "Resolved")
                                    {
                                        <form asp-action="UpdateStatus" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="ticketId" value="@ticket.TicketID" />
                                            <input type="hidden" name="newStatus" value="In Progress" />
                                            <button type="submit" class="btn-action btn-start">
                                                <i class="bi bi-play"></i>
                                                Start Work
                                            </button>
                                        </form>

                                        <form asp-action="UpdateStatus" method="post" class="d-inline">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="ticketId" value="@ticket.TicketID" />
                                            <input type="hidden" name="newStatus" value="Resolved" />
                                            <button type="submit" class="btn-action btn-resolve" onclick="return confirm('Mark this ticket as resolved?')">
                                                <i class="bi bi-check-circle"></i>
                                                Resolve
                                            </button>
                                        </form>
                                    }
                                </div>

                                <div class="quick-comment">
                                    <form asp-action="AddComment" method="post" class="d-flex gap-2 w-100">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="ticketId" value="@ticket.TicketID" />
                                        <input type="text"
                                               name="message"
                                               class="comment-input"
                                               placeholder="Add a quick comment..."
                                               required>
                                        <button type="submit" class="comment-btn">
                                            <i class="bi bi-send"></i>
                                        </button>
                                    </form>
                                </div>

                              
                                @if (Model.TicketChats.TryGetValue(ticket.TicketID, out var messages) && messages.Any())
                                {
                                    <div class="chat-preview">
                                        <div class="chat-header">
                                            <i class="bi bi-chat-left-text me-1"></i>
                                            Recent Communication (@messages.Count messages)
                                        </div>
                                        @foreach (var msg in messages.OrderByDescending(m => m.SentAt).Take(1))
                                        {
                                            <div class="chat-message">
                                                <span class="message-sender">@(msg.User?.FullName ?? "Unknown"):</span>
                                                @(msg.Message.Length > 80 ? msg.Message.Substring(0, 80) + "..." : msg.Message)
                                                <div class="message-time">@msg.SentAt.ToString("MMM dd 'at' HH:mm")</div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div class="empty-state">
                            <div class="empty-icon">
                                <i class="bi bi-inbox"></i>
                            </div>
                            <h3 class="empty-title">No Tickets Assigned</h3>
                            <p class="empty-subtitle">
                                You're all caught up! New tickets will appear here when they're assigned to you.
                            </p>
                        </div>
                    }
                </div>
            </div>
        </main>
    </div>

    <script>
      
        document.addEventListener('DOMContentLoaded', function() {
            initializeAnimations();
            setupInteractiveElements();
        });

        function initializeAnimations() {
          
            const statCards = document.querySelectorAll('.stat-card');
            statCards.forEach((card, index) => {
                card.style.opacity = '0';
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.animation = `fadeInUp 0.8s ease forwards`;
                }, index * 150);
            });

    
            const navItems = document.querySelectorAll('.nav-item');
            navItems.forEach((item, index) => {
                item.style.opacity = '0';
                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.animation = `slideInLeft 0.6s ease forwards`;
                }, index * 100);
            });
        }

        function setupInteractiveElements() {
           
            const ticketCards = document.querySelectorAll('.ticket-card');
            ticketCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-8px) scale(1.01)';
                    this.style.boxShadow = '0 20px 40px rgba(0, 217, 255, 0.2)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                    this.style.boxShadow = '0 12px 28px rgba(0, 0, 0, 0.4)';
                });
            });


            const primaryButtons = document.querySelectorAll('.btn-primary, .comment-btn');
            primaryButtons.forEach(btn => {
                btn.addEventListener('mouseenter', function() {
                    this.style.boxShadow = '0 0 30px rgba(0, 217, 255, 0.5), 0 8px 25px rgba(0, 0, 0, 0.3)';
                });

                btn.addEventListener('mouseleave', function() {
                    this.style.boxShadow = '0 0 40px rgba(0, 217, 255, 0.3)';
                });
            });
        }

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }

        function scrollToSection(sectionId) {
            const element = document.getElementById(sectionId);
            if (element) {
                element.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        }

      
        setInterval(function() {
            fetch('/AgentDashboard/GetTicketStats')
                .then(response => response.json())
                .then(data => {
                    if (!data.error) {
                        console.log('Stats updated:', data);
                       
                    }
                })
                .catch(error => console.error('Error updating stats:', error));
        }, 30000);

        
        document.addEventListener('mousemove', function(e) {
            if (Math.random() > 0.95) { 
                const particle = document.createElement('div');
                particle.style.cssText = `
                    position: fixed;
                    width: 2px;
                    height: 2px;
                    background: var(--accent-cyan);
                    border-radius: 50%;
                    pointer-events: none;
                    z-index: 9999;
                    opacity: 0.3;
                    animation: particleFade 1s ease-out forwards;
                `;
                particle.style.left = e.clientX + 'px';
                particle.style.top = e.clientY + 'px';

                document.body.appendChild(particle);

                setTimeout(() => {
                    particle.remove();
                }, 1000);
            }
        });

        const style = document.createElement('style');
        style.textContent = `
            @@keyframes particleFade {
                0% {
                    opacity: 0.3;
                    transform: scale(1);
                }
                100% {
                    opacity: 0;
                    transform: scale(0);
                }
            }
        `;
        document.head.appendChild(style);

     
        document.addEventListener('keydown', function(e) {
     
            if (e.key === 'r' && !e.ctrlKey) {
                e.preventDefault();
                location.reload();
            }
        });

       
        document.querySelectorAll('form[action*="UpdateStatus"] button').forEach(button => {
            if (button.textContent.includes('Resolve')) {
                button.addEventListener('click', function(e) {
                    if (!confirm('Are you sure you want to mark this ticket as resolved?')) {
                        e.preventDefault();
                    }
                });
            }
        });


        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 16px 24px;
                background: var(--gradient-card);
                border: 1px solid rgba(255,255,255,0.2);
                border-radius: 12px;
                color: var(--text-primary);
                box-shadow: var(--shadow-xl);
                z-index: 10000;
                animation: slideInRight 0.3s ease;
            `;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOutRight 0.3s ease forwards';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }

     
        setTimeout(() => {
            const workloadStatus = '@Model.GetWorkloadStatus()';
            const assignedCount = @Model.AssignedToMe;

            if (assignedCount > 0) {
                showNotification(`Welcome back! You have ${assignedCount} tickets assigned (${workloadStatus} workload).`);
            } else {
                showNotification('Welcome back! No tickets currently assigned.');
            }
        }, 2000);
    </script>
</body>
</html>