<div id="enhanced-chatbot" style="position: fixed; bottom: 20px; right: 20px; z-index: 9999; font-family: 'Inter', sans-serif;">
    <!-- Chat Toggle Button -->
    <button id="chat-toggle" style="
        width: 70px; height: 70px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border: none;
        color: white;
        font-size: 28px;
        cursor: pointer;
        box-shadow: 0 8px 32px rgba(102, 126, 234, 0.4);
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        position: relative;
        overflow: hidden;">
        <i class="bi bi-robot"></i>
        <div id="chat-notification" style="
            position: absolute;
            top: -5px;
            right: -5px;
            width: 20px;
            height: 20px;
            background: #ff4757;
            border-radius: 50%;
            display: none;
            animation: pulse 2s infinite;">
        </div>
    </button>

    <!-- Chat Window -->
    <div id="chat-window" style="
        position: absolute;
        bottom: 90px;
        right: 0;
        width: 400px;
        height: 550px;
        background: linear-gradient(135deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 20px;
        box-shadow: 0 25px 60px rgba(0, 0, 0, 0.15), 0 0 0 1px rgba(255, 255, 255, 0.05);
        display: none;
        flex-direction: column;
        overflow: hidden;
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.2);">

        <!-- Header -->
        <!-- Header -->
        <div style="
    background: linear-gradient(135deg, #667eea, #764ba2);
    color: white;
    padding: 20px;
    font-weight: 600;
    position: relative;
    overflow: hidden;">
            <div style="
                 position: absolute;
                 top: 0;
                 left: 0;
                 width: 100%;
                 height: 100%;
                 background: url('data:image /svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\"><circle cx=\"20\" cy=\"20\" r=\"2\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"80\" cy=\"40\" r=\"1\" fill=\"white\" opacity=\"0.1\"/><circle cx=\"40\" cy=\"80\" r=\"1.5\" fill=\"white\" opacity=\"0.1\"/></svg>');
        opacity: 0.3;"></div>
            <div style="display: flex; justify-content: space-between; align-items: center; position: relative; z-index: 1;">
                <div style="display: flex; align-items: center; gap: 12px;">
                    <div style="
                width: 40px;
                height: 40px;
                background: rgba(255, 255, 255, 0.2);
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 18px;">
                        <i class="bi bi-robot"></i>
                    </div>
                    <div>
                        <div style="font-size: 16px; font-weight: 700;">IT Support Assistant</div>
                        <div style="font-size: 12px; opacity: 0.9;" id="chat-status">Online & Ready to Help</div>
                    </div>
                </div>
                <button id="chat-close" style="
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            font-size: 18px;
            cursor: pointer;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        </div>
        <!-- Messages Area -->
        <div id="chat-messages" style="
            flex: 1;
            padding: 20px;
            overflow-y: auto;
            background: linear-gradient(135deg, #f8fafc 0%, #ffffff 100%);
            scroll-behavior: smooth;">
        </div>

        <!-- Quick Actions -->
        <div id="quick-actions" style="
            padding: 0 20px 10px;
            display: none;
            gap: 8px;
            overflow-x: auto;">
            <button class="quick-action-btn" data-message="I need help with my password">
                🔐 Password Help
            </button>
            <button class="quick-action-btn" data-message="I'm having email problems">
                📧 Email Issues
            </button>
            <button class="quick-action-btn" data-message="Network connection problems">
                🌐 Network Help
            </button>
        </div>

        <!-- Input Area -->
        <div style="
            padding: 20px;
            border-top: 1px solid rgba(0, 0, 0, 0.05);
            background: white;">
            <div style="display: flex; gap: 12px; align-items: flex-end;">
                <div style="flex: 1; position: relative;">
                    <textarea id="chat-input" placeholder="Type your message..." style="
                        width: 100%;
                        padding: 15px 20px;
                        border: 2px solid #e2e8f0;
                        border-radius: 25px;
                        outline: none;
                        resize: none;
                        font-family: inherit;
                        font-size: 14px;
                        line-height: 1.4;
                        max-height: 100px;
                        min-height: 50px;
                        transition: all 0.3s ease;
                        background: #f8fafc;
                        box-sizing: border-box;
                        color: #2d3748;" rows="1"></textarea>
                    <div id="typing-indicator" style="
                        position: absolute;
                        bottom: -25px;
                        left: 20px;
                        font-size: 12px;
                        color: #667eea;
                        display: none;">
                        Assistant is typing...
                    </div>
                </div>
                <button id="chat-send" style="
                    background: linear-gradient(135deg, #667eea, #764ba2);
                    border: none;
                    color: white;
                    width: 50px;
                    height: 50px;
                    border-radius: 50%;
                    cursor: pointer;
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    font-size: 18px;
                    transition: all 0.3s ease;
                    box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);">
                    <i class="bi bi-send-fill"></i>
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    /* Enhanced contrast styles for better readability */
    .chatbot-message-user {
        background: linear-gradient(135deg, #667eea, #764ba2) !important;
        color: #ffffff !important;
        padding: 12px 18px;
        border-radius: 20px 20px 5px 20px;
        max-width: 80%;
        word-wrap: break-word;
        font-size: 14px;
        line-height: 1.5;
        box-shadow: 0 3px 12px rgba(102, 126, 234, 0.3);
        font-weight: 500;
    }

    .chatbot-message-bot {
        background: #f7fafc !important;
        color: #1a202c !important;
        padding: 14px 18px;
        border-radius: 20px 20px 20px 5px;
        max-width: 80%;
        box-shadow: 0 3px 12px rgba(0, 0, 0, 0.08);
        border: 1px solid #e2e8f0;
        word-wrap: break-word;
        font-size: 14px;
        line-height: 1.6;
        font-weight: 500;
    }

        /* Enhanced bot message text styling */
        .chatbot-message-bot strong {
            color: #2d3748 !important;
            font-weight: 700;
        }

        .chatbot-message-bot em {
            color: #4a5568 !important;
            font-style: italic;
        }

    /* Enhanced emoji and number styling */
    .chatbot-emoji {
        font-size: 16px !important;
        margin: 0 2px;
    }

    .chatbot-number-badge {
        background: #667eea !important;
        color: #ffffff !important;
        padding: 3px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: 700;
        margin-right: 6px;
        display: inline-block;
    }

    .quick-action-btn {
        background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
        border: 1px solid rgba(102, 126, 234, 0.2);
        color: #4c51bf;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
        min-width: max-content;
    }

        .quick-action-btn:hover {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.2), rgba(118, 75, 162, 0.2));
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
            color: #553c9a;
        }

    @@keyframes pulse {
        0%, 100% {
            transform: scale(1);
            opacity: 1;
        }

        50% {
            transform: scale(1.2);
            opacity: 0.7;
        }
    }

    @@keyframes messageSlideIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @@keyframes typingDots {
        0%, 20% {
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        100% {
            opacity: 0;
        }
    }

    .typing-dot {
        animation: typingDots 1.4s infinite;
    }

        .typing-dot:nth-child(2) {
            animation-delay: 0.2s;
        }

        .typing-dot:nth-child(3) {
            animation-delay: 0.4s;
        }

    #chat-input:focus {
        border-color: #667eea !important;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1) !important;
        background: white !important;
    }

    #chat-send:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
    }

    #chat-toggle:hover {
        transform: translateY(-3px) scale(1.05);
        box-shadow: 0 12px 40px rgba(102, 126, 234, 0.5);
    }

    /* Custom scrollbar */
    #chat-messages::-webkit-scrollbar {
        width: 6px;
    }

    #chat-messages::-webkit-scrollbar-track {
        background: transparent;
    }

    #chat-messages::-webkit-scrollbar-thumb {
        background: rgba(102, 126, 234, 0.3);
        border-radius: 3px;
    }

        #chat-messages::-webkit-scrollbar-thumb:hover {
            background: rgba(102, 126, 234, 0.5);
        }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Enhanced Chatbot: DOM loaded, initializing...');

        const chatToggle = document.getElementById('chat-toggle');
        const chatWindow = document.getElementById('chat-window');
        const chatClose = document.getElementById('chat-close');
        const chatInput = document.getElementById('chat-input');
        const chatSend = document.getElementById('chat-send');
        const chatMessages = document.getElementById('chat-messages');
        const typingIndicator = document.getElementById('typing-indicator');
        const quickActionBtns = document.querySelectorAll('.quick-action-btn');

        let sessionId = 'session_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
        let conversationStarted = false;
        let isTyping = false;

        console.log('Enhanced Chatbot: Elements found, setting up event listeners...');

        // Check if elements exist
        if (!chatToggle || !chatWindow) {
            console.error('Enhanced Chatbot: Required elements not found!');
            return;
        }

        // Auto-resize textarea
        chatInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = Math.min(this.scrollHeight, 100) + 'px';
        });

        // Toggle chat window
        chatToggle.addEventListener('click', function() {
            console.log('Enhanced Chatbot: Toggle button clicked');

            if (chatWindow.style.display === 'none' || !chatWindow.style.display) {
                console.log('Enhanced Chatbot: Opening chat window');
                chatWindow.style.display = 'flex';
                chatWindow.style.animation = 'messageSlideIn 0.4s ease';

                if (!conversationStarted) {
                    setTimeout(startConversation, 500);
                }

                setTimeout(() => {
                    if (chatInput) {
                        chatInput.focus();
                    }
                }, 600);
            } else {
                console.log('Enhanced Chatbot: Closing chat window');
                chatWindow.style.display = 'none';
            }
        });

        // Close chat
        chatClose.addEventListener('click', function() {
            console.log('Enhanced Chatbot: Close button clicked');
            chatWindow.style.display = 'none';
        });

        // Quick action buttons
        quickActionBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const message = this.getAttribute('data-message');
                chatInput.value = message;
                sendMessage();
            });
        });

        // Send message on Enter or click
        chatInput.addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });

        chatSend.addEventListener('click', sendMessage);

        async function startConversation() {
            console.log('Enhanced Chatbot: Starting conversation...');
            try {
                const response = await fetch('/api/AiChat/start', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });

                if (response.ok) {
                    const data = await response.json();
                    sessionId = data.sessionId;
                    addMessage(data.welcomeMessage, 'bot');
                    conversationStarted = true;
                    showWelcomeQuickActions();
                    console.log('Enhanced Chatbot: Conversation started successfully');
                } else {
                    console.warn('Enhanced Chatbot: API call failed, using fallback welcome');
                    addMessage("Hello! 👋 I'm your friendly IT Support Assistant! I'm here to help you solve technology problems, answer questions, and make your digital life easier. What can I help you with today?", 'bot');
                    conversationStarted = true;
                    showWelcomeQuickActions();
                }
            } catch (error) {
                console.error('Enhanced Chatbot: Error starting conversation:', error);
                addMessage("Hello! 👋 I'm your friendly IT Support Assistant! I'm here to help you solve technology problems, answer questions, and make your digital life easier. What can I help you with today?", 'bot');
                conversationStarted = true;
                showWelcomeQuickActions();
            }
        }

        function showWelcomeQuickActions() {
            setTimeout(() => {
                const quickActionsContainer = document.getElementById('quick-actions');
                if (quickActionsContainer) {
                    quickActionsContainer.style.display = 'flex';
                    quickActionsContainer.style.animation = 'messageSlideIn 0.4s ease';
                }
            }, 1000);
        }

        async function sendMessage() {
            const message = chatInput.value.trim();
            if (!message || isTyping) return;

            console.log('Enhanced Chatbot: Sending message:', message);

            
            addMessage(message, 'user');
            chatInput.value = '';
            chatInput.style.height = 'auto';

            // Show typing indicator
            showTypingIndicator();

            try {
                const response = await fetch('/api/AiChat/send', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ message, sessionId })
                });

                hideTypingIndicator();

                if (response.ok) {
                    const data = await response.json();
                    // Add realistic delay for more natural conversation
                    setTimeout(() => {
                        addMessage(data.response, 'bot');
                    }, 500 + Math.random() * 1000);
                } else {
                    console.error('Enhanced Chatbot: API error:', response.status);
                    addMessage("I apologize, but I'm experiencing some technical difficulties right now. 🤖💔 Please try again in a moment, or feel free to create a support ticket for immediate assistance!", 'bot');
                }
            } catch (error) {
                console.error('Enhanced Chatbot: Network error:', error);
                hideTypingIndicator();
                addMessage("I'm having trouble connecting right now. 😔 Please check your internet connection or try creating a support ticket for help!", 'bot');
            }
        }

        function showTypingIndicator() {
            isTyping = true;
            if (typingIndicator) {
                typingIndicator.style.display = 'block';
            }

            const statusElement = document.getElementById('chat-status');
            if (statusElement) {
                statusElement.textContent = 'Typing...';
            }

            // Add typing animation in messages
            const typingDiv = document.createElement('div');
            typingDiv.id = 'typing-animation';
            typingDiv.style.marginBottom = '15px';
            typingDiv.innerHTML = `
                <div style="display: flex; gap: 10px; align-items: flex-end;">
                    <div style="
                        width: 35px;
                        height: 35px;
                        background: linear-gradient(135deg, #667eea, #764ba2);
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        color: white;
                        font-size: 14px;">
                        <i class="bi bi-robot"></i>
                    </div>
                    <div style="
                        background: #f7fafc;
                        padding: 12px 18px;
                        border-radius: 20px;
                        box-shadow: 0 3px 12px rgba(0,0,0,0.08);
                        border: 1px solid #e2e8f0;
                        display: flex;
                        gap: 4px;
                        align-items: center;">
                        <div class="typing-dot" style="width: 8px; height: 8px; background: #667eea; border-radius: 50%;"></div>
                        <div class="typing-dot" style="width: 8px; height: 8px; background: #667eea; border-radius: 50%;"></div>
                        <div class="typing-dot" style="width: 8px; height: 8px; background: #667eea; border-radius: 50%;"></div>
                    </div>
                </div>`;

            chatMessages.appendChild(typingDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;
        }

        function hideTypingIndicator() {
            isTyping = false;
            if (typingIndicator) {
                typingIndicator.style.display = 'none';
            }

            const statusElement = document.getElementById('chat-status');
            if (statusElement) {
                statusElement.textContent = 'Online & Ready to Help';
            }

            const typingAnimation = document.getElementById('typing-animation');
            if (typingAnimation) {
                typingAnimation.remove();
            }
        }

        function addMessage(message, type) {
            console.log('Enhanced Chatbot: Adding message:', type, message);

            const messageDiv = document.createElement('div');
            messageDiv.style.marginBottom = '20px';
            messageDiv.style.animation = 'messageSlideIn 0.4s ease';

            if (type === 'user') {
                messageDiv.innerHTML = `
                    <div style="display: flex; justify-content: flex-end; gap: 10px; align-items: flex-end;">
                        <div class="chatbot-message-user">
                            ${formatMessage(message)}
                        </div>
                        <div style="
                            width: 35px;
                            height: 35px;
                            background: linear-gradient(135deg, #667eea, #764ba2);
                            border-radius: 50%;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            color: white;
                            font-size: 14px;
                            font-weight: 600;">
                            U
                        </div>
                    </div>`;
            } else {
                messageDiv.innerHTML = `
                    <div style="display: flex; gap: 10px; align-items: flex-start;">
                        <div style="
                            width: 35px;
                            height: 35px;
                            background: linear-gradient(135deg, #667eea, #764ba2);
                            border-radius: 50%;
                            display: flex;
                            align-items: center;
                            justify-content: center;
                            color: white;
                            font-size: 14px;
                            flex-shrink: 0;">
                            <i class="bi bi-robot"></i>
                        </div>
                        <div class="chatbot-message-bot">
                            ${formatMessage(message)}
                        </div>
                    </div>`;
            }

            chatMessages.appendChild(messageDiv);
            chatMessages.scrollTop = chatMessages.scrollHeight;

            // Add notification effect
            if (type === 'bot' && chatWindow.style.display === 'none') {
                const notification = document.getElementById('chat-notification');
                if (notification) {
                    notification.style.display = 'block';
                }
            }
        }

        function formatMessage(message) {
            // Enhanced message formatting with better contrast
            return message
                .replace(/\*\*(.*?)\*\*/g, '<strong style="color: #2d3748; font-weight: 700;">$1</strong>')
                .replace(/\*(.*?)\*/g, '<em style="color: #4a5568; font-style: italic;">$1</em>')
                .replace(/\n/g, '<br>')
                .replace(/(\d+)️⃣/g, '<span class="chatbot-number-badge">$1</span>')
                .replace(/(🔐|📧|🌐|🖨️|💻|🤖|👋|😊|🌟|✨|🤔|😅|🤷‍♀️|😔|💫|🤗|💔|🔍|📚)/g, '<span class="chatbot-emoji">$1</span>');
        }

        // Hide notification when chat is opened
        chatToggle.addEventListener('click', function() {
            const notification = document.getElementById('chat-notification');
            if (notification) {
                notification.style.display = 'none';
            }
        });

       
        chatToggle.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px) scale(1.05)';
        });

        chatToggle.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });

        chatClose.addEventListener('mouseenter', function() {
            this.style.background = 'rgba(255, 255, 255, 0.3)';
            this.style.transform = 'scale(1.1)';
        });

        chatClose.addEventListener('mouseleave', function() {
            this.style.background = 'rgba(255, 255, 255, 0.2)';
            this.style.transform = 'scale(1)';
        });

        console.log('Enhanced Chatbot: Initialization complete');
    });
</script>