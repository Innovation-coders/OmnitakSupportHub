@model IEnumerable<OmnitakSupportHub.Models.Ticket>
@{
    ViewData["Title"] = "User Dashboard";
    Layout = null; // Custom layout for full control
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - Omnitak Support Hub</title>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            /* Premium Enterprise Color Palette - Matching Login & Manager Dashboard */
            --primary-deep-blue: #0F1419;
            --primary-navy: #1A237E;
            --accent-electric: #00E5FF;
            --accent-purple: #7B2CBF;
            --accent-gold: #FFB300;
            --accent-success: #4CAF50;
            --accent-warning: #FF9800;
            --accent-danger: #F44336;
            --accent-info: #2196F3;
            --surface-dark: #121212;
            --surface-elevated: #1E1E1E;
            --surface-card: #242424;
            --surface-glass: rgba(255, 255, 255, 0.05);
            --text-primary: #FFFFFF;
            --text-secondary: rgba(255, 255, 255, 0.7);
            --text-muted: rgba(255, 255, 255, 0.5);
            --gradient-primary: linear-gradient(135deg, #0F1419 0%, #1A237E 50%, #7B2CBF 100%);
            --gradient-accent: linear-gradient(45deg, #00E5FF, #7B2CBF);
            --gradient-card: linear-gradient(135deg, #1E1E1E 0%, #242424 100%);
            --shadow-glow: 0 0 40px rgba(0, 229, 255, 0.3);
            --shadow-deep: 0 25px 50px -12px rgba(0, 0, 0, 0.8);
            --shadow-card: 0 8px 32px rgba(0, 0, 0, 0.3);
            --border-glow: rgba(0, 229, 255, 0.3);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background: var(--primary-deep-blue);
            color: var(--text-primary);
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Animated Background */
        .background-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            background: var(--gradient-primary);
        }

        .floating-orbs {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
        }

        .orb {
            position: absolute;
            border-radius: 50%;
            background: var(--gradient-accent);
            opacity: 0.03;
            filter: blur(1px);
            animation: float 30s infinite linear;
        }

            .orb:nth-child(1) {
                width: 350px;
                height: 350px;
                top: -175px;
                left: -175px;
                animation-delay: 0s;
            }

            .orb:nth-child(2) {
                width: 280px;
                height: 280px;
                top: 70%;
                right: -140px;
                animation-delay: -12s;
            }

            .orb:nth-child(3) {
                width: 220px;
                height: 220px;
                bottom: -110px;
                left: 45%;
                animation-delay: -24s;
            }

        @@keyframes float {
            0%

        {
            transform: translateY(0) rotate(0deg);
        }

        33% {
            transform: translateY(-30px) rotate(120deg);
        }

        66% {
            transform: translateY(15px) rotate(240deg);
        }

        100% {
            transform: translateY(0) rotate(360deg);
        }

        }

        /* Main Dashboard Layout */
        .dashboard-container {
            display: flex;
            min-height: 100vh;
            position: relative;
            z-index: 10;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(0, 0, 0, 0.4);
            backdrop-filter: blur(20px);
            border-right: 1px solid var(--border-glow);
            padding: 32px 24px;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: all 0.3s ease;
        }

        .sidebar-header {
            text-align: center;
            margin-bottom: 48px;
            animation: slideInLeft 1s ease;
        }

        .sidebar-logo {
            width: 60px;
            height: 60px;
            background: var(--gradient-accent);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 24px;
            font-weight: 800;
            color: white;
            margin: 0 auto 16px;
            box-shadow: var(--shadow-glow);
            animation: pulse 3s infinite;
        }

        @@keyframes pulse {
            0%, 100%

        {
            transform: scale(1);
        }

        50% {
            transform: scale(1.05);
        }

        }

        .sidebar-title {
            font-size: 20px;
            font-weight: 700;
            background: var(--gradient-accent);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 8px;
        }

        .sidebar-subtitle {
            font-size: 14px;
            color: var(--text-muted);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .user-profile {
            background: var(--surface-glass);
            border-radius: 16px;
            padding: 20px;
            margin-bottom: 32px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            animation: slideInLeft 1.2s ease;
        }

        .user-avatar {
            width: 50px;
            height: 50px;
            background: var(--gradient-accent);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            font-weight: 700;
            color: white;
            margin: 0 auto 12px;
            box-shadow: 0 4px 16px rgba(0, 229, 255, 0.4);
        }

        .user-name {
            font-size: 16px;
            font-weight: 600;
            color: var(--text-primary);
            text-align: center;
            margin-bottom: 4px;
        }

        .user-role {
            font-size: 12px;
            color: var(--text-muted);
            text-align: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .nav-menu {
            list-style: none;
        }

        .nav-item {
            margin-bottom: 8px;
            animation: slideInLeft 1s ease;
            animation-delay: calc(var(--delay) * 0.1s);
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 16px 20px;
            color: var(--text-secondary);
            text-decoration: none;
            border-radius: 12px;
            transition: all 0.3s ease;
            font-weight: 500;
            position: relative;
            overflow: hidden;
        }

            .nav-link:hover {
                color: var(--text-primary);
                background: var(--surface-glass);
                transform: translateX(8px);
                box-shadow: 0 4px 20px rgba(0, 229, 255, 0.2);
            }

            .nav-link.active {
                background: var(--gradient-accent);
                color: white;
                box-shadow: var(--shadow-glow);
            }

        .nav-icon {
            font-size: 18px;
            margin-right: 12px;
            width: 24px;
            text-align: center;
        }

        .nav-badge {
            background: var(--accent-danger);
            color: white;
            font-size: 10px;
            padding: 2px 6px;
            border-radius: 10px;
            margin-left: auto;
            font-weight: 600;
        }

        .logout-section {
            margin-top: auto;
            padding-top: 32px;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
        }

        .logout-btn {
            width: 100%;
            padding: 16px;
            background: linear-gradient(135deg, #F44336 0%, #D32F2F 100%);
            border: none;
            border-radius: 12px;
            color: white;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

            .logout-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 8px 25px rgba(244, 67, 54, 0.4);
            }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 32px;
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            min-height: 100vh;
        }

        .content-header {
            margin-bottom: 40px;
            animation: slideInRight 1s ease;
        }

        .welcome-section h1 {
            font-size: 36px;
            font-weight: 800;
            background: var(--gradient-accent);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 8px;
        }

        .welcome-section p {
            font-size: 18px;
            color: var(--text-secondary);
        }

        /* Quick Actions */
        .quick-actions {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 40px;
        }

        .action-card {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            padding: 24px;
            text-align: center;
            transition: all 0.4s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            animation: fadeInUp 1s ease;
            animation-delay: calc(var(--delay) * 0.2s);
            animation-fill-mode: both;
        }

            .action-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-card);
                border-color: var(--accent-electric);
            }

            .action-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: var(--gradient-accent);
                border-radius: 20px 20px 0 0;
            }

        .action-icon {
            width: 64px;
            height: 64px;
            background: var(--gradient-accent);
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            margin: 0 auto 16px;
            box-shadow: 0 8px 20px rgba(0, 229, 255, 0.3);
        }

        .action-title {
            font-size: 16px;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 8px;
        }

        .action-subtitle {
            font-size: 14px;
            color: var(--text-secondary);
            line-height: 1.4;
        }

        /* Tickets Section */
        .tickets-section {
            background: var(--gradient-card);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 20px;
            margin-bottom: 32px;
            overflow: hidden;
            animation: fadeInUp 1.2s ease;
        }

        .section-header {
            background: linear-gradient(135deg, var(--accent-electric) 0%, var(--accent-purple) 100%);
            padding: 24px 32px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .section-title {
            font-size: 20px;
            font-weight: 700;
            color: white;
            margin: 0;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .section-actions {
            display: flex;
            gap: 12px;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 6px;
            font-size: 14px;
        }

        .btn-primary {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
        }

            .btn-primary:hover {
                background: rgba(255, 255, 255, 0.3);
                transform: translateY(-1px);
            }

        .section-content {
            padding: 32px;
        }

        /* Ticket Cards */
        .tickets-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 24px;
        }

        .ticket-card {
            background: var(--surface-elevated);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 16px;
            padding: 24px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .ticket-card:hover {
                transform: translateY(-4px);
                box-shadow: 0 12px 28px rgba(0, 0, 0, 0.4);
                border-color: var(--accent-electric);
            }

        .ticket-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 16px;
        }

        .ticket-id {
            font-size: 14px;
            font-weight: 700;
            color: var(--accent-electric);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .ticket-date {
            font-size: 12px;
            color: var(--text-muted);
        }

        .ticket-title {
            font-size: 18px;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 12px;
            line-height: 1.3;
        }

        .ticket-description {
            font-size: 14px;
            color: var(--text-secondary);
            line-height: 1.5;
            margin-bottom: 20px;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .ticket-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 16px;
        }

        .ticket-category {
            font-size: 12px;
            color: var(--text-muted);
            background: rgba(255, 255, 255, 0.05);
            padding: 4px 8px;
            border-radius: 12px;
        }

        .ticket-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        /* Status Badges */
        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-open {
            background: rgba(0, 229, 255, 0.2);
            color: var(--accent-electric);
        }

        .status-assigned {
            background: rgba(255, 152, 0, 0.2);
            color: var(--accent-warning);
        }

        .status-inprogress {
            background: rgba(33, 150, 243, 0.2);
            color: var(--accent-info);
        }

        .status-resolved {
            background: rgba(76, 175, 80, 0.2);
            color: var(--accent-success);
        }

        .status-closed {
            background: rgba(255, 255, 255, 0.1);
            color: var(--text-muted);
        }

        /* Priority Badges */
        .priority-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .priority-high {
            background: rgba(244, 67, 54, 0.2);
            color: var(--accent-danger);
        }

        .priority-medium {
            background: rgba(255, 152, 0, 0.2);
            color: var(--accent-warning);
        }

        .priority-low {
            background: rgba(76, 175, 80, 0.2);
            color: var(--accent-success);
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 60px 20px;
            color: var(--text-muted);
        }

        .empty-icon {
            font-size: 64px;
            margin-bottom: 24px;
            opacity: 0.5;
        }

        .empty-title {
            font-size: 24px;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 12px;
        }

        .empty-subtitle {
            font-size: 16px;
            margin-bottom: 32px;
            line-height: 1.5;
        }

        .btn-cta {
            background: var(--gradient-accent);
            color: white;
            padding: 16px 32px;
            border-radius: 12px;
            font-weight: 600;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            box-shadow: var(--shadow-glow);
        }

            .btn-cta:hover {
                transform: translateY(-2px);
                box-shadow: var(--shadow-glow), var(--shadow-card);
            }

        /* Alerts */
        .alert {
            padding: 16px 24px;
            border-radius: 12px;
            margin-bottom: 24px;
            border-left: 4px solid;
            backdrop-filter: blur(10px);
            animation: slideInDown 0.5s ease;
        }

        .alert-success {
            background: rgba(76, 175, 80, 0.1);
            border-left-color: var(--accent-success);
            color: var(--accent-success);
        }

        .alert-info {
            background: rgba(0, 229, 255, 0.1);
            border-left-color: var(--accent-electric);
            color: var(--accent-electric);
        }

        /* Animations */
        @@keyframes slideInLeft {
            from

        {
            opacity: 0;
            transform: translateX(-30px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }

        }

        @@keyframes slideInRight {
            from

        {
            opacity: 0;
            transform: translateX(30px);
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }

        }

        @@keyframes slideInDown {
            from

        {
            opacity: 0;
            transform: translateY(-20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

        @@keyframes fadeInUp {
            from

        {
            opacity: 0;
            transform: translateY(30px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }

        }

       
        @@media (max-width: 1024px) {
            .sidebar

        {
            transform: translateX(-100%);
            z-index: 1000;
        }

        .sidebar.open {
            transform: translateX(0);
        }

        .main-content {
            margin-left: 0;
        }

        .quick-actions {
            grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
        }

        .tickets-grid {
            grid-template-columns: 1fr;
        }

        }

        @@media (max-width: 768px) {
            .main-content

        {
            padding: 16px;
        }

        .welcome-section h1 {
            font-size: 28px;
        }

        .section-header {
            flex-direction: column;
            gap: 16px;
            text-align: center;
        }

        }

        /* Mobile Menu Button */
        .mobile-menu-btn {
            display: none;
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1001;
            background: var(--gradient-accent);
            border: none;
            border-radius: 12px;
            padding: 12px;
            color: white;
            cursor: pointer;
            font-size: 20px;
            box-shadow: var(--shadow-glow);
        }

        @@media (max-width: 1024px) {
            .mobile-menu-btn

        {
            display: block;
        }

        }
    </style>
</head>
<body>
    <!-- Animated Background -->
    <div class="background-container">
        <div class="floating-orbs">
            <div class="orb"></div>
            <div class="orb"></div>
            <div class="orb"></div>
        </div>
    </div>

    <!-- Mobile Menu Button -->
    <button class="mobile-menu-btn" onclick="toggleSidebar()">
        <i class="bi bi-list"></i>
    </button>

    <div class="dashboard-container">
        <!-- Sidebar -->
        <aside class="sidebar" id="sidebar">
            <div class="sidebar-header">
                <div class="sidebar-logo">O</div>
                <h3 class="sidebar-title">Support Portal</h3>
                <p class="sidebar-subtitle">Your Hub</p>
            </div>

            <!-- User Profile -->
            <div class="user-profile">
                <div class="user-avatar">
                    @(User.Identity.Name?.Substring(0, 1).ToUpper() ?? "U")
                </div>
                <div class="user-name">@(User.Identity.Name ?? "User")</div>
                <div class="user-role">Employee</div>
            </div>

            <nav>
                <ul class="nav-menu">
                    <li class="nav-item" style="--delay: 1">
                        <a href="#" class="nav-link active">
                            <i class="nav-icon bi bi-house-door"></i>
                            Dashboard
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 2">
                        <a href="#my-tickets" class="nav-link" onclick="scrollToSection('my-tickets')">
                            <i class="nav-icon bi bi-ticket-detailed"></i>
                            My Tickets
                            @if (Model?.Where(t => t.Status?.StatusName == "Open").Count() > 0)
                            {
                                <span class="nav-badge">@Model.Where(t => t.Status?.StatusName == "Open").Count()</span>
                            }
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 3">
                        <a asp-controller="Ticket" asp-action="Create" class="nav-link">
                            <i class="nav-icon bi bi-plus-circle"></i>
                            New Ticket
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 4">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-clock-history"></i>
                            History
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 5">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-question-circle"></i>
                            Help Center
                        </a>
                    </li>
                    <li class="nav-item" style="--delay: 6">
                        <a href="#" class="nav-link">
                            <i class="nav-icon bi bi-person-gear"></i>
                            Profile
                        </a>
                    </li>
                </ul>
            </nav>

            <div class="logout-section">
                <form asp-controller="Account" asp-action="Logout" method="post">
                    <button type="submit" class="logout-btn">
                        <i class="bi bi-box-arrow-right"></i>
                        Logout
                    </button>
                </form>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <div class="welcome-section">
                    <h1>Welcome Back!</h1>
                    <p>Manage your support requests and get help when you need it.</p>
                </div>
            </div>

            <!-- Alerts -->
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <i class="bi bi-check-circle"></i>
                    @TempData["SuccessMessage"]
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i>
                    @TempData["ErrorMessage"]
                </div>
            }

            <!-- Quick Actions -->
            <div class="quick-actions">
                <div class="action-card" style="--delay: 1" onclick="location.href='@Url.Action("Create", "Ticket")'">
                    <div class="action-icon">
                        <i class="bi bi-plus-circle"></i>
                    </div>
                    <div class="action-title">Submit New Ticket</div>
                    <div class="action-subtitle">Report an issue or request support</div>
                </div>

                <div class="action-card" style="--delay: 2" onclick="scrollToSection('my-tickets')">
                    <div class="action-icon">
                        <i class="bi bi-ticket-detailed"></i>
                    </div>
                    <div class="action-title">View My Tickets</div>
                    <div class="action-subtitle">Track progress on your requests</div>
                </div>

                <div class="action-card" style="--delay: 3">
                    <div class="action-icon">
                        <i class="bi bi-question-circle"></i>
                    </div>
                    <div class="action-title">Help Center</div>
                    <div class="action-subtitle">Find answers to common questions</div>
                </div>

                <div class="action-card" style="--delay: 4">
                    <div class="action-icon">
                        <i class="bi bi-chat-dots"></i>
                    </div>
                    <div class="action-title">Live Chat</div>
                    <div class="action-subtitle">Get instant help from our team</div>
                </div>
            </div>

            <!-- My Tickets Section -->
            <div id="my-tickets" class="tickets-section">
                <div class="section-header">
                    <h2 class="section-title">
                        <i class="bi bi-ticket-detailed"></i>
                        My Support Tickets
                    </h2>
                    <div class="section-actions">
                        <a asp-controller="Ticket" asp-action="Create" class="btn btn-primary">
                            <i class="bi bi-plus"></i>
                            New Ticket
                        </a>
                        <button class="btn btn-primary" onclick="refreshTickets()">
                            <i class="bi bi-arrow-clockwise"></i>
                            Refresh
                        </button>
                    </div>
                </div>
                <div class="section-content">
                    @if (Model != null && Model.Any())
                    {
                        <div class="tickets-grid">
                            @foreach (var ticket in Model.OrderByDescending(t => t.CreatedAt))
                            {
                                <div class="ticket-card">
                                    <div class="ticket-header">
                                        <div class="ticket-id">Ticket #@ticket.TicketID</div>
                                        <div class="ticket-date">@ticket.CreatedAt.ToString("MMM dd, yyyy")</div>
                                    </div>
                                    <h3 class="ticket-title">@ticket.Title</h3>
                                    <p class="ticket-description">@ticket.Description</p>
                                    <div class="ticket-meta">
                                        <div class="ticket-category">
                                            <i class="bi bi-folder"></i>
                                            @(ticket.Category?.CategoryName ?? "General")
                                        </div>
                                        <div class="priority-badge priority-@(ticket.Priority?.PriorityName?.ToLower() ?? "low")">
                                            @(ticket.Priority?.PriorityName ?? "Low")
                                        </div>
                                    </div>
                                    <div class="ticket-footer">
                                        <div class="status-badge status-@(ticket.Status?.StatusName?.ToLower().Replace(" ", "") ?? "open")">
                                            @(ticket.Status?.StatusName ?? "Open")
                                        </div>
                                        <div style="display: flex; gap: 8px;">
                                            <button class="btn" style="padding: 8px 12px; background: var(--surface-glass); color: var(--text-primary); border: 1px solid rgba(255,255,255,0.2);" onclick="viewTicket(@ticket.TicketID)">
                                                <i class="bi bi-eye"></i>
                                            </button>
                                            @if (ticket.Status?.StatusName == "Open" || ticket.Status?.StatusName == "Assigned")
                                            {
                                                <button class="btn" style="padding: 8px 12px; background: var(--accent-warning); color: white;" onclick="editTicket(@ticket.TicketID)">
                                                    <i class="bi bi-pencil"></i>
                                                </button>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="empty-state">
                            <div class="empty-icon">
                                <i class="bi bi-ticket"></i>
                            </div>
                            <h3 class="empty-title">No Support Tickets Yet</h3>
                            <p class="empty-subtitle">
                                You haven't submitted any support tickets yet. When you need help,
                                just click the button below to get started.
                            </p>
                            <a asp-controller="Ticket" asp-action="Create" class="btn-cta">
                                <i class="bi bi-plus-circle"></i>
                                Submit Your First Ticket
                            </a>
                        </div>
                    }
                </div>
            </div>

            <!-- Quick Stats -->
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 20px; margin-top: 32px;">
                <div style="background: var(--gradient-card); border: 1px solid rgba(255,255,255,0.1); border-radius: 16px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; font-weight: 800; color: var(--accent-electric); margin-bottom: 8px;">
                        @(Model?.Count() ?? 0)
                    </div>
                    <div style="color: var(--text-secondary); font-size: 14px;">Total Tickets</div>
                </div>

                <div style="background: var(--gradient-card); border: 1px solid rgba(255,255,255,0.1); border-radius: 16px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; font-weight: 800; color: var(--accent-warning); margin-bottom: 8px;">
                        @(Model?.Where(t => t.Status?.StatusName == "Open" || t.Status?.StatusName == "Assigned").Count() ?? 0)
                    </div>
                    <div style="color: var(--text-secondary); font-size: 14px;">Active Tickets</div>
                </div>

                <div style="background: var(--gradient-card); border: 1px solid rgba(255,255,255,0.1); border-radius: 16px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; font-weight: 800; color: var(--accent-success); margin-bottom: 8px;">
                        @(Model?.Where(t => t.Status?.StatusName == "Resolved" || t.Status?.StatusName == "Closed").Count() ?? 0)
                    </div>
                    <div style="color: var(--text-secondary); font-size: 14px;">Resolved</div>
                </div>

                <div style="background: var(--gradient-card); border: 1px solid rgba(255,255,255,0.1); border-radius: 16px; padding: 24px; text-align: center;">
                    <div style="font-size: 32px; font-weight: 800; color: var(--accent-purple); margin-bottom: 8px;">
                        @{
                            var avgDays = Model?.Any() == true ?
                            Math.Round(Model.Where(t => t.Status?.StatusName == "Resolved" || t.Status?.StatusName == "Closed")
                            .Select(t => (DateTime.Now - t.CreatedAt).TotalDays)
                            .DefaultIfEmpty(0).Average(), 1) : 0;
                        }
                        @avgDays
                    </div>
                    <div style="color: var(--text-secondary); font-size: 14px;">Avg Resolution (Days)</div>
                </div>
            </div>

            <!-- Help Section -->
            <div style="background: var(--gradient-card); border: 1px solid rgba(255,255,255,0.1); border-radius: 20px; margin-top: 32px; padding: 32px; text-align: center;">
                <h3 style="color: var(--text-primary); margin-bottom: 16px; font-size: 24px;">Need Help?</h3>
                <p style="color: var(--text-secondary); margin-bottom: 24px; font-size: 16px;">
                    Our support team is here to help you. Check out these resources or submit a new ticket.
                </p>
                <div style="display: flex; gap: 16px; justify-content: center; flex-wrap: wrap;">
                    <a href="#" class="btn" style="background: var(--gradient-accent); color: white; padding: 12px 24px;">
                        <i class="bi bi-book"></i>
                        Knowledge Base
                    </a>
                    <a href="#" class="btn" style="background: var(--surface-elevated); color: var(--text-primary); border: 1px solid rgba(255,255,255,0.2); padding: 12px 24px;">
                        <i class="bi bi-chat-dots"></i>
                        Live Chat
                    </a>
                    <a href="#" class="btn" style="background: var(--surface-elevated); color: var(--text-primary); border: 1px solid rgba(255,255,255,0.2); padding: 12px 24px;">
                        <i class="bi bi-telephone"></i>
                        Call Support
                    </a>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            initializeAnimations();
            setupInteractiveElements();
        });

        function initializeAnimations() {
            // Add staggered animations to action cards
            const actionCards = document.querySelectorAll('.action-card');
            actionCards.forEach((card, index) => {
                card.style.opacity = '0';
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.animation = `fadeInUp 0.8s ease forwards`;
                }, index * 150);
            });

            // Animate ticket cards
            const ticketCards = document.querySelectorAll('.ticket-card');
            ticketCards.forEach((card, index) => {
                card.style.opacity = '0';
                setTimeout(() => {
                    card.style.opacity = '1';
                    card.style.animation = `fadeInUp 0.6s ease forwards`;
                }, (index * 100) + 500);
            });

            // Animate nav items
            const navItems = document.querySelectorAll('.nav-item');
            navItems.forEach((item, index) => {
                item.style.opacity = '0';
                setTimeout(() => {
                    item.style.opacity = '1';
                    item.style.animation = `slideInLeft 0.6s ease forwards`;
                }, index * 100);
            });
        }

        function setupInteractiveElements() {
            // Add hover effects to action cards
            const actionCards = document.querySelectorAll('.action-card');
            actionCards.forEach(card => {
                card.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-8px) scale(1.02)';
                    this.style.boxShadow = '0 20px 40px rgba(0, 229, 255, 0.2)';
                });

                card.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0) scale(1)';
                    this.style.boxShadow = 'none';
                });
            });

            // Add glow effect to buttons
            const buttons = document.querySelectorAll('.btn-cta, .btn-primary');
            buttons.forEach(btn => {
                btn.addEventListener('mouseenter', function() {
                    this.style.boxShadow = '0 0 30px rgba(0, 229, 255, 0.5), 0 8px 25px rgba(0, 0, 0, 0.3)';
                });

                btn.addEventListener('mouseleave', function() {
                    this.style.boxShadow = '0 0 40px rgba(0, 229, 255, 0.3)';
                });
            });
        }

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('open');
        }

        function scrollToSection(sectionId) {
            const element = document.getElementById(sectionId);
            if (element) {
                element.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                });
            }
        }

        function viewTicket(ticketId) {
            // Implement view ticket functionality
            console.log('View ticket:', ticketId);
            // You can redirect to a ticket details page or open a modal
            // window.location.href = '/Ticket/Details/' + ticketId;
        }

        function editTicket(ticketId) {
            // Implement edit ticket functionality
            console.log('Edit ticket:', ticketId);
            // You can redirect to an edit page
            // window.location.href = '/Ticket/Edit/' + ticketId;
        }

        function refreshTickets() {
            // Add loading state
            const refreshBtn = event.target.closest('button');
            const originalContent = refreshBtn.innerHTML;
            refreshBtn.innerHTML = '<i class="bi bi-arrow-clockwise" style="animation: spin 1s linear infinite;"></i> Refreshing...';
            refreshBtn.disabled = true;

            // Simulate refresh (you can implement actual refresh logic)
            setTimeout(() => {
                refreshBtn.innerHTML = originalContent;
                refreshBtn.disabled = false;
                location.reload(); // Or implement AJAX refresh
            }, 1500);
        }

        // Add particle effect on mouse move (lighter for user dashboard)
        document.addEventListener('mousemove', function(e) {
            if (Math.random() > 0.9) { // Only create particles 10% of the time for lighter effect
                const particle = document.createElement('div');
                particle.style.cssText = `
                    position: fixed;
                    width: 3px;
                    height: 3px;
                    background: var(--accent-electric);
                    border-radius: 50%;
                    pointer-events: none;
                    z-index: 9999;
                    opacity: 0.4;
                    animation: particleFade 1.5s ease-out forwards;
                `;
                particle.style.left = e.clientX + 'px';
                particle.style.top = e.clientY + 'px';

                document.body.appendChild(particle);

                setTimeout(() => {
                    particle.remove();
                }, 1500);
            }
        });

        // Add CSS animation for particle fade
        const style = document.createElement('style');
        style.textContent = `
            @@keyframes particleFade {
                0% {
                    opacity: 0.4;
                    transform: scale(1);
                }
                100% {
                    opacity: 0;
                    transform: scale(0);
                }
            }

            @@keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
        `;
        document.head.appendChild(style);

        // Add keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl + N for new ticket
            if (e.ctrlKey && e.key === 'n') {
                e.preventDefault();
                window.location.href = '@Url.Action("Create", "Ticket")';
            }

            // Ctrl + R for refresh
            if (e.ctrlKey && e.key === 'r') {
                e.preventDefault();
                refreshTickets();
            }
        });

   
        setInterval(function() {
            
            console.log('Auto-refresh interval - implement AJAX call if needed');
        }, 60000);

        
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                padding: 16px 24px;
                background: var(--gradient-card);
                border: 1px solid rgba(255,255,255,0.2);
                border-radius: 12px;
                color: var(--text-primary);
                box-shadow: var(--shadow-card);
                z-index: 10000;
                animation: slideInRight 0.3s ease;
            `;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.style.animation = 'slideOutRight 0.3s ease forwards';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 3000);
        }

      
        setTimeout(() => {
            const ticketCount = @(Model?.Count() ?? 0);
            if (ticketCount > 0) {
                showNotification(`Welcome back! You have ${ticketCount} ticket${ticketCount !== 1 ? 's' : ''} in your account.`);
            }
        }, 2000);
    </script>
</body>
</html>